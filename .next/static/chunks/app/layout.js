/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk_N_E"] = self["webpackChunk_N_E"] || []).push([["app/layout"],{

/***/ "(app-pages-browser)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%2FUsers%2Fkdrama%2FDownloads%2FALL%20WEBSITES%2FBACKUPS%2FTHIRD%20ATTEMPT%20%2Fapp%2Fcontexts%2FLanguageContext.tsx&modules=%2FUsers%2Fkdrama%2FDownloads%2FALL%20WEBSITES%2FBACKUPS%2FTHIRD%20ATTEMPT%20%2Fapp%2Fcontexts%2FMusicPlayerContext.tsx&modules=%2FUsers%2Fkdrama%2FDownloads%2FALL%20WEBSITES%2FBACKUPS%2FTHIRD%20ATTEMPT%20%2Fapp%2Fglobals.css&server=false!":
/*!******************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%2FUsers%2Fkdrama%2FDownloads%2FALL%20WEBSITES%2FBACKUPS%2FTHIRD%20ATTEMPT%20%2Fapp%2Fcontexts%2FLanguageContext.tsx&modules=%2FUsers%2Fkdrama%2FDownloads%2FALL%20WEBSITES%2FBACKUPS%2FTHIRD%20ATTEMPT%20%2Fapp%2Fcontexts%2FMusicPlayerContext.tsx&modules=%2FUsers%2Fkdrama%2FDownloads%2FALL%20WEBSITES%2FBACKUPS%2FTHIRD%20ATTEMPT%20%2Fapp%2Fglobals.css&server=false! ***!
  \******************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("Promise.resolve(/*! import() eager */).then(__webpack_require__.bind(__webpack_require__, /*! ./app/contexts/LanguageContext.tsx */ \"(app-pages-browser)/./app/contexts/LanguageContext.tsx\"));\nPromise.resolve(/*! import() eager */).then(__webpack_require__.bind(__webpack_require__, /*! ./app/contexts/MusicPlayerContext.tsx */ \"(app-pages-browser)/./app/contexts/MusicPlayerContext.tsx\"));\nPromise.resolve(/*! import() eager */).then(__webpack_require__.bind(__webpack_require__, /*! ./app/globals.css */ \"(app-pages-browser)/./app/globals.css\"))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvYnVpbGQvd2VicGFjay9sb2FkZXJzL25leHQtZmxpZ2h0LWNsaWVudC1lbnRyeS1sb2FkZXIuanM/bW9kdWxlcz0lMkZVc2VycyUyRmtkcmFtYSUyRkRvd25sb2FkcyUyRkFMTCUyMFdFQlNJVEVTJTJGQkFDS1VQUyUyRlRISVJEJTIwQVRURU1QVCUyMCUyRmFwcCUyRmNvbnRleHRzJTJGTGFuZ3VhZ2VDb250ZXh0LnRzeCZtb2R1bGVzPSUyRlVzZXJzJTJGa2RyYW1hJTJGRG93bmxvYWRzJTJGQUxMJTIwV0VCU0lURVMlMkZCQUNLVVBTJTJGVEhJUkQlMjBBVFRFTVBUJTIwJTJGYXBwJTJGY29udGV4dHMlMkZNdXNpY1BsYXllckNvbnRleHQudHN4Jm1vZHVsZXM9JTJGVXNlcnMlMkZrZHJhbWElMkZEb3dubG9hZHMlMkZBTEwlMjBXRUJTSVRFUyUyRkJBQ0tVUFMlMkZUSElSRCUyMEFUVEVNUFQlMjAlMkZhcHAlMkZnbG9iYWxzLmNzcyZzZXJ2ZXI9ZmFsc2UhIiwibWFwcGluZ3MiOiJBQUFBLDhMQUFpSTtBQUNqSSxvTUFBb0k7QUFDcEkiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLz84N2EyIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCgvKiB3ZWJwYWNrTW9kZTogXCJlYWdlclwiICovIFwiL1VzZXJzL2tkcmFtYS9Eb3dubG9hZHMvQUxMIFdFQlNJVEVTL0JBQ0tVUFMvVEhJUkQgQVRURU1QVCAvYXBwL2NvbnRleHRzL0xhbmd1YWdlQ29udGV4dC50c3hcIik7XG5pbXBvcnQoLyogd2VicGFja01vZGU6IFwiZWFnZXJcIiAqLyBcIi9Vc2Vycy9rZHJhbWEvRG93bmxvYWRzL0FMTCBXRUJTSVRFUy9CQUNLVVBTL1RISVJEIEFUVEVNUFQgL2FwcC9jb250ZXh0cy9NdXNpY1BsYXllckNvbnRleHQudHN4XCIpO1xuaW1wb3J0KC8qIHdlYnBhY2tNb2RlOiBcImVhZ2VyXCIgKi8gXCIvVXNlcnMva2RyYW1hL0Rvd25sb2Fkcy9BTEwgV0VCU0lURVMvQkFDS1VQUy9USElSRCBBVFRFTVBUIC9hcHAvZ2xvYmFscy5jc3NcIikiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%2FUsers%2Fkdrama%2FDownloads%2FALL%20WEBSITES%2FBACKUPS%2FTHIRD%20ATTEMPT%20%2Fapp%2Fcontexts%2FLanguageContext.tsx&modules=%2FUsers%2Fkdrama%2FDownloads%2FALL%20WEBSITES%2FBACKUPS%2FTHIRD%20ATTEMPT%20%2Fapp%2Fcontexts%2FMusicPlayerContext.tsx&modules=%2FUsers%2Fkdrama%2FDownloads%2FALL%20WEBSITES%2FBACKUPS%2FTHIRD%20ATTEMPT%20%2Fapp%2Fglobals.css&server=false!\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/compiled/react/cjs/react-jsx-dev-runtime.development.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/next/dist/compiled/react/cjs/react-jsx-dev-runtime.development.js ***!
  \****************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/**\n * @license React\n * react-jsx-dev-runtime.development.js\n *\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */ \nif (true) {\n    (function() {\n        \"use strict\";\n        var React = __webpack_require__(/*! next/dist/compiled/react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n        // ATTENTION\n        // When adding new symbols to this file,\n        // Please consider also adding to 'react-devtools-shared/src/backend/ReactSymbols'\n        // The Symbol used to tag the ReactElement-like types.\n        var REACT_ELEMENT_TYPE = Symbol.for(\"react.element\");\n        var REACT_PORTAL_TYPE = Symbol.for(\"react.portal\");\n        var REACT_FRAGMENT_TYPE = Symbol.for(\"react.fragment\");\n        var REACT_STRICT_MODE_TYPE = Symbol.for(\"react.strict_mode\");\n        var REACT_PROFILER_TYPE = Symbol.for(\"react.profiler\");\n        var REACT_PROVIDER_TYPE = Symbol.for(\"react.provider\");\n        var REACT_CONTEXT_TYPE = Symbol.for(\"react.context\");\n        var REACT_FORWARD_REF_TYPE = Symbol.for(\"react.forward_ref\");\n        var REACT_SUSPENSE_TYPE = Symbol.for(\"react.suspense\");\n        var REACT_SUSPENSE_LIST_TYPE = Symbol.for(\"react.suspense_list\");\n        var REACT_MEMO_TYPE = Symbol.for(\"react.memo\");\n        var REACT_LAZY_TYPE = Symbol.for(\"react.lazy\");\n        var REACT_OFFSCREEN_TYPE = Symbol.for(\"react.offscreen\");\n        var REACT_CACHE_TYPE = Symbol.for(\"react.cache\");\n        var MAYBE_ITERATOR_SYMBOL = Symbol.iterator;\n        var FAUX_ITERATOR_SYMBOL = \"@@iterator\";\n        function getIteratorFn(maybeIterable) {\n            if (maybeIterable === null || typeof maybeIterable !== \"object\") {\n                return null;\n            }\n            var maybeIterator = MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL];\n            if (typeof maybeIterator === \"function\") {\n                return maybeIterator;\n            }\n            return null;\n        }\n        var ReactSharedInternals = React.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n        function error(format) {\n            {\n                {\n                    for(var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++){\n                        args[_key2 - 1] = arguments[_key2];\n                    }\n                    printWarning(\"error\", format, args);\n                }\n            }\n        }\n        function printWarning(level, format, args) {\n            // When changing this logic, you might want to also\n            // update consoleWithStackDev.www.js as well.\n            {\n                var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\n                var stack = ReactDebugCurrentFrame.getStackAddendum();\n                if (stack !== \"\") {\n                    format += \"%s\";\n                    args = args.concat([\n                        stack\n                    ]);\n                } // eslint-disable-next-line react-internal/safe-string-coercion\n                var argsWithFormat = args.map(function(item) {\n                    return String(item);\n                }); // Careful: RN currently depends on this prefix\n                argsWithFormat.unshift(\"Warning: \" + format); // We intentionally don't use spread (or .apply) directly because it\n                // breaks IE9: https://github.com/facebook/react/issues/13610\n                // eslint-disable-next-line react-internal/no-production-logging\n                Function.prototype.apply.call(console[level], console, argsWithFormat);\n            }\n        }\n        // -----------------------------------------------------------------------------\n        var enableScopeAPI = false; // Experimental Create Event Handle API.\n        var enableCacheElement = false;\n        var enableTransitionTracing = false; // No known bugs, but needs performance testing\n        var enableLegacyHidden = false; // Enables unstable_avoidThisFallback feature in Fiber\n        // stuff. Intended to enable React core members to more easily debug scheduling\n        // issues in DEV builds.\n        var enableDebugTracing = false;\n        var REACT_CLIENT_REFERENCE$2 = Symbol.for(\"react.client.reference\");\n        function isValidElementType(type) {\n            if (typeof type === \"string\" || typeof type === \"function\") {\n                return true;\n            } // Note: typeof might be other than 'symbol' or 'number' (e.g. if it's a polyfill).\n            if (type === REACT_FRAGMENT_TYPE || type === REACT_PROFILER_TYPE || enableDebugTracing || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || enableLegacyHidden || type === REACT_OFFSCREEN_TYPE || enableScopeAPI || enableCacheElement || enableTransitionTracing) {\n                return true;\n            }\n            if (typeof type === \"object\" && type !== null) {\n                if (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || // This needs to include all possible module reference object\n                // types supported by any Flight configuration anywhere since\n                // we don't know which Flight build this will end up being used\n                // with.\n                type.$$typeof === REACT_CLIENT_REFERENCE$2 || type.getModuleId !== undefined) {\n                    return true;\n                }\n            }\n            return false;\n        }\n        function getWrappedName(outerType, innerType, wrapperName) {\n            var displayName = outerType.displayName;\n            if (displayName) {\n                return displayName;\n            }\n            var functionName = innerType.displayName || innerType.name || \"\";\n            return functionName !== \"\" ? wrapperName + \"(\" + functionName + \")\" : wrapperName;\n        } // Keep in sync with react-reconciler/getComponentNameFromFiber\n        function getContextName(type) {\n            return type.displayName || \"Context\";\n        }\n        var REACT_CLIENT_REFERENCE$1 = Symbol.for(\"react.client.reference\"); // Note that the reconciler package should generally prefer to use getComponentNameFromFiber() instead.\n        function getComponentNameFromType(type) {\n            if (type == null) {\n                // Host root, text node or just invalid type.\n                return null;\n            }\n            if (typeof type === \"function\") {\n                if (type.$$typeof === REACT_CLIENT_REFERENCE$1) {\n                    // TODO: Create a convention for naming client references with debug info.\n                    return null;\n                }\n                return type.displayName || type.name || null;\n            }\n            if (typeof type === \"string\") {\n                return type;\n            }\n            switch(type){\n                case REACT_FRAGMENT_TYPE:\n                    return \"Fragment\";\n                case REACT_PORTAL_TYPE:\n                    return \"Portal\";\n                case REACT_PROFILER_TYPE:\n                    return \"Profiler\";\n                case REACT_STRICT_MODE_TYPE:\n                    return \"StrictMode\";\n                case REACT_SUSPENSE_TYPE:\n                    return \"Suspense\";\n                case REACT_SUSPENSE_LIST_TYPE:\n                    return \"SuspenseList\";\n                case REACT_CACHE_TYPE:\n                    {\n                        return \"Cache\";\n                    }\n            }\n            if (typeof type === \"object\") {\n                {\n                    if (typeof type.tag === \"number\") {\n                        error(\"Received an unexpected object in getComponentNameFromType(). \" + \"This is likely a bug in React. Please file an issue.\");\n                    }\n                }\n                switch(type.$$typeof){\n                    case REACT_CONTEXT_TYPE:\n                        var context = type;\n                        return getContextName(context) + \".Consumer\";\n                    case REACT_PROVIDER_TYPE:\n                        var provider = type;\n                        return getContextName(provider._context) + \".Provider\";\n                    case REACT_FORWARD_REF_TYPE:\n                        return getWrappedName(type, type.render, \"ForwardRef\");\n                    case REACT_MEMO_TYPE:\n                        var outerName = type.displayName || null;\n                        if (outerName !== null) {\n                            return outerName;\n                        }\n                        return getComponentNameFromType(type.type) || \"Memo\";\n                    case REACT_LAZY_TYPE:\n                        {\n                            var lazyComponent = type;\n                            var payload = lazyComponent._payload;\n                            var init = lazyComponent._init;\n                            try {\n                                return getComponentNameFromType(init(payload));\n                            } catch (x) {\n                                return null;\n                            }\n                        }\n                }\n            }\n            return null;\n        }\n        var assign = Object.assign;\n        // Helpers to patch console.logs to avoid logging during side-effect free\n        // replaying on render function. This currently only patches the object\n        // lazily which won't cover if the log function was extracted eagerly.\n        // We could also eagerly patch the method.\n        var disabledDepth = 0;\n        var prevLog;\n        var prevInfo;\n        var prevWarn;\n        var prevError;\n        var prevGroup;\n        var prevGroupCollapsed;\n        var prevGroupEnd;\n        function disabledLog() {}\n        disabledLog.__reactDisabledLog = true;\n        function disableLogs() {\n            {\n                if (disabledDepth === 0) {\n                    /* eslint-disable react-internal/no-production-logging */ prevLog = console.log;\n                    prevInfo = console.info;\n                    prevWarn = console.warn;\n                    prevError = console.error;\n                    prevGroup = console.group;\n                    prevGroupCollapsed = console.groupCollapsed;\n                    prevGroupEnd = console.groupEnd; // https://github.com/facebook/react/issues/19099\n                    var props = {\n                        configurable: true,\n                        enumerable: true,\n                        value: disabledLog,\n                        writable: true\n                    }; // $FlowFixMe[cannot-write] Flow thinks console is immutable.\n                    Object.defineProperties(console, {\n                        info: props,\n                        log: props,\n                        warn: props,\n                        error: props,\n                        group: props,\n                        groupCollapsed: props,\n                        groupEnd: props\n                    });\n                /* eslint-enable react-internal/no-production-logging */ }\n                disabledDepth++;\n            }\n        }\n        function reenableLogs() {\n            {\n                disabledDepth--;\n                if (disabledDepth === 0) {\n                    /* eslint-disable react-internal/no-production-logging */ var props = {\n                        configurable: true,\n                        enumerable: true,\n                        writable: true\n                    }; // $FlowFixMe[cannot-write] Flow thinks console is immutable.\n                    Object.defineProperties(console, {\n                        log: assign({}, props, {\n                            value: prevLog\n                        }),\n                        info: assign({}, props, {\n                            value: prevInfo\n                        }),\n                        warn: assign({}, props, {\n                            value: prevWarn\n                        }),\n                        error: assign({}, props, {\n                            value: prevError\n                        }),\n                        group: assign({}, props, {\n                            value: prevGroup\n                        }),\n                        groupCollapsed: assign({}, props, {\n                            value: prevGroupCollapsed\n                        }),\n                        groupEnd: assign({}, props, {\n                            value: prevGroupEnd\n                        })\n                    });\n                /* eslint-enable react-internal/no-production-logging */ }\n                if (disabledDepth < 0) {\n                    error(\"disabledDepth fell below zero. \" + \"This is a bug in React. Please file an issue.\");\n                }\n            }\n        }\n        var ReactCurrentDispatcher = ReactSharedInternals.ReactCurrentDispatcher;\n        var prefix;\n        function describeBuiltInComponentFrame(name, source, ownerFn) {\n            {\n                if (prefix === undefined) {\n                    // Extract the VM specific prefix used by each line.\n                    try {\n                        throw Error();\n                    } catch (x) {\n                        var match = x.stack.trim().match(/\\n( *(at )?)/);\n                        prefix = match && match[1] || \"\";\n                    }\n                } // We use the prefix to ensure our stacks line up with native stack frames.\n                return \"\\n\" + prefix + name;\n            }\n        }\n        var reentry = false;\n        var componentFrameCache;\n        {\n            var PossiblyWeakMap = typeof WeakMap === \"function\" ? WeakMap : Map;\n            componentFrameCache = new PossiblyWeakMap();\n        }\n        /**\n * Leverages native browser/VM stack frames to get proper details (e.g.\n * filename, line + col number) for a single component in a component stack. We\n * do this by:\n *   (1) throwing and catching an error in the function - this will be our\n *       control error.\n *   (2) calling the component which will eventually throw an error that we'll\n *       catch - this will be our sample error.\n *   (3) diffing the control and sample error stacks to find the stack frame\n *       which represents our component.\n */ function describeNativeComponentFrame(fn, construct) {\n            // If something asked for a stack inside a fake render, it should get ignored.\n            if (!fn || reentry) {\n                return \"\";\n            }\n            {\n                var frame = componentFrameCache.get(fn);\n                if (frame !== undefined) {\n                    return frame;\n                }\n            }\n            reentry = true;\n            var previousPrepareStackTrace = Error.prepareStackTrace; // $FlowFixMe[incompatible-type] It does accept undefined.\n            Error.prepareStackTrace = undefined;\n            var previousDispatcher;\n            {\n                previousDispatcher = ReactCurrentDispatcher.current; // Set the dispatcher in DEV because this might be call in the render function\n                // for warnings.\n                ReactCurrentDispatcher.current = null;\n                disableLogs();\n            }\n            /**\n   * Finding a common stack frame between sample and control errors can be\n   * tricky given the different types and levels of stack trace truncation from\n   * different JS VMs. So instead we'll attempt to control what that common\n   * frame should be through this object method:\n   * Having both the sample and control errors be in the function under the\n   * `DescribeNativeComponentFrameRoot` property, + setting the `name` and\n   * `displayName` properties of the function ensures that a stack\n   * frame exists that has the method name `DescribeNativeComponentFrameRoot` in\n   * it for both control and sample stacks.\n   */ var RunInRootFrame = {\n                DetermineComponentFrameRoot: function() {\n                    var control;\n                    try {\n                        // This should throw.\n                        if (construct) {\n                            // Something should be setting the props in the constructor.\n                            var Fake = function() {\n                                throw Error();\n                            }; // $FlowFixMe[prop-missing]\n                            Object.defineProperty(Fake.prototype, \"props\", {\n                                set: function() {\n                                    // We use a throwing setter instead of frozen or non-writable props\n                                    // because that won't throw in a non-strict mode function.\n                                    throw Error();\n                                }\n                            });\n                            if (typeof Reflect === \"object\" && Reflect.construct) {\n                                // We construct a different control for this case to include any extra\n                                // frames added by the construct call.\n                                try {\n                                    Reflect.construct(Fake, []);\n                                } catch (x) {\n                                    control = x;\n                                }\n                                Reflect.construct(fn, [], Fake);\n                            } else {\n                                try {\n                                    Fake.call();\n                                } catch (x) {\n                                    control = x;\n                                } // $FlowFixMe[prop-missing] found when upgrading Flow\n                                fn.call(Fake.prototype);\n                            }\n                        } else {\n                            try {\n                                throw Error();\n                            } catch (x) {\n                                control = x;\n                            } // TODO(luna): This will currently only throw if the function component\n                            // tries to access React/ReactDOM/props. We should probably make this throw\n                            // in simple components too\n                            var maybePromise = fn(); // If the function component returns a promise, it's likely an async\n                            // component, which we don't yet support. Attach a noop catch handler to\n                            // silence the error.\n                            // TODO: Implement component stacks for async client components?\n                            if (maybePromise && typeof maybePromise.catch === \"function\") {\n                                maybePromise.catch(function() {});\n                            }\n                        }\n                    } catch (sample) {\n                        // This is inlined manually because closure doesn't do it for us.\n                        if (sample && control && typeof sample.stack === \"string\") {\n                            return [\n                                sample.stack,\n                                control.stack\n                            ];\n                        }\n                    }\n                    return [\n                        null,\n                        null\n                    ];\n                }\n            }; // $FlowFixMe[prop-missing]\n            RunInRootFrame.DetermineComponentFrameRoot.displayName = \"DetermineComponentFrameRoot\";\n            var namePropDescriptor = Object.getOwnPropertyDescriptor(RunInRootFrame.DetermineComponentFrameRoot, \"name\"); // Before ES6, the `name` property was not configurable.\n            if (namePropDescriptor && namePropDescriptor.configurable) {\n                // V8 utilizes a function's `name` property when generating a stack trace.\n                Object.defineProperty(RunInRootFrame.DetermineComponentFrameRoot, // is set to `false`.\n                // $FlowFixMe[cannot-write]\n                \"name\", {\n                    value: \"DetermineComponentFrameRoot\"\n                });\n            }\n            try {\n                var _RunInRootFrame$Deter = RunInRootFrame.DetermineComponentFrameRoot(), sampleStack = _RunInRootFrame$Deter[0], controlStack = _RunInRootFrame$Deter[1];\n                if (sampleStack && controlStack) {\n                    // This extracts the first frame from the sample that isn't also in the control.\n                    // Skipping one frame that we assume is the frame that calls the two.\n                    var sampleLines = sampleStack.split(\"\\n\");\n                    var controlLines = controlStack.split(\"\\n\");\n                    var s = 0;\n                    var c = 0;\n                    while(s < sampleLines.length && !sampleLines[s].includes(\"DetermineComponentFrameRoot\")){\n                        s++;\n                    }\n                    while(c < controlLines.length && !controlLines[c].includes(\"DetermineComponentFrameRoot\")){\n                        c++;\n                    } // We couldn't find our intentionally injected common root frame, attempt\n                    // to find another common root frame by search from the bottom of the\n                    // control stack...\n                    if (s === sampleLines.length || c === controlLines.length) {\n                        s = sampleLines.length - 1;\n                        c = controlLines.length - 1;\n                        while(s >= 1 && c >= 0 && sampleLines[s] !== controlLines[c]){\n                            // We expect at least one stack frame to be shared.\n                            // Typically this will be the root most one. However, stack frames may be\n                            // cut off due to maximum stack limits. In this case, one maybe cut off\n                            // earlier than the other. We assume that the sample is longer or the same\n                            // and there for cut off earlier. So we should find the root most frame in\n                            // the sample somewhere in the control.\n                            c--;\n                        }\n                    }\n                    for(; s >= 1 && c >= 0; s--, c--){\n                        // Next we find the first one that isn't the same which should be the\n                        // frame that called our sample function and the control.\n                        if (sampleLines[s] !== controlLines[c]) {\n                            // In V8, the first line is describing the message but other VMs don't.\n                            // If we're about to return the first line, and the control is also on the same\n                            // line, that's a pretty good indicator that our sample threw at same line as\n                            // the control. I.e. before we entered the sample frame. So we ignore this result.\n                            // This can happen if you passed a class to function component, or non-function.\n                            if (s !== 1 || c !== 1) {\n                                do {\n                                    s--;\n                                    c--; // We may still have similar intermediate frames from the construct call.\n                                    // The next one that isn't the same should be our match though.\n                                    if (c < 0 || sampleLines[s] !== controlLines[c]) {\n                                        // V8 adds a \"new\" prefix for native classes. Let's remove it to make it prettier.\n                                        var _frame = \"\\n\" + sampleLines[s].replace(\" at new \", \" at \"); // If our component frame is labeled \"<anonymous>\"\n                                        // but we have a user-provided \"displayName\"\n                                        // splice it in to make the stack more readable.\n                                        if (fn.displayName && _frame.includes(\"<anonymous>\")) {\n                                            _frame = _frame.replace(\"<anonymous>\", fn.displayName);\n                                        }\n                                        if (true) {\n                                            if (typeof fn === \"function\") {\n                                                componentFrameCache.set(fn, _frame);\n                                            }\n                                        } // Return the line we found.\n                                        return _frame;\n                                    }\n                                }while (s >= 1 && c >= 0);\n                            }\n                            break;\n                        }\n                    }\n                }\n            } finally{\n                reentry = false;\n                {\n                    ReactCurrentDispatcher.current = previousDispatcher;\n                    reenableLogs();\n                }\n                Error.prepareStackTrace = previousPrepareStackTrace;\n            } // Fallback to just using the name if we couldn't make it throw.\n            var name = fn ? fn.displayName || fn.name : \"\";\n            var syntheticFrame = name ? describeBuiltInComponentFrame(name) : \"\";\n            {\n                if (typeof fn === \"function\") {\n                    componentFrameCache.set(fn, syntheticFrame);\n                }\n            }\n            return syntheticFrame;\n        }\n        function describeFunctionComponentFrame(fn, source, ownerFn) {\n            {\n                return describeNativeComponentFrame(fn, false);\n            }\n        }\n        function shouldConstruct(Component) {\n            var prototype = Component.prototype;\n            return !!(prototype && prototype.isReactComponent);\n        }\n        function describeUnknownElementTypeFrameInDEV(type, source, ownerFn) {\n            if (type == null) {\n                return \"\";\n            }\n            if (typeof type === \"function\") {\n                {\n                    return describeNativeComponentFrame(type, shouldConstruct(type));\n                }\n            }\n            if (typeof type === \"string\") {\n                return describeBuiltInComponentFrame(type);\n            }\n            switch(type){\n                case REACT_SUSPENSE_TYPE:\n                    return describeBuiltInComponentFrame(\"Suspense\");\n                case REACT_SUSPENSE_LIST_TYPE:\n                    return describeBuiltInComponentFrame(\"SuspenseList\");\n            }\n            if (typeof type === \"object\") {\n                switch(type.$$typeof){\n                    case REACT_FORWARD_REF_TYPE:\n                        return describeFunctionComponentFrame(type.render);\n                    case REACT_MEMO_TYPE:\n                        // Memo may contain any component type so we recursively resolve it.\n                        return describeUnknownElementTypeFrameInDEV(type.type, source, ownerFn);\n                    case REACT_LAZY_TYPE:\n                        {\n                            var lazyComponent = type;\n                            var payload = lazyComponent._payload;\n                            var init = lazyComponent._init;\n                            try {\n                                // Lazy may contain any component type so we recursively resolve it.\n                                return describeUnknownElementTypeFrameInDEV(init(payload), source, ownerFn);\n                            } catch (x) {}\n                        }\n                }\n            }\n            return \"\";\n        }\n        // $FlowFixMe[method-unbinding]\n        var hasOwnProperty = Object.prototype.hasOwnProperty;\n        var loggedTypeFailures = {};\n        var ReactDebugCurrentFrame$1 = ReactSharedInternals.ReactDebugCurrentFrame;\n        function setCurrentlyValidatingElement$1(element) {\n            {\n                if (element) {\n                    var owner = element._owner;\n                    var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);\n                    ReactDebugCurrentFrame$1.setExtraStackFrame(stack);\n                } else {\n                    ReactDebugCurrentFrame$1.setExtraStackFrame(null);\n                }\n            }\n        }\n        function checkPropTypes(typeSpecs, values, location, componentName, element) {\n            {\n                // $FlowFixMe[incompatible-use] This is okay but Flow doesn't know it.\n                var has = Function.call.bind(hasOwnProperty);\n                for(var typeSpecName in typeSpecs){\n                    if (has(typeSpecs, typeSpecName)) {\n                        var error$1 = void 0; // Prop type validation may throw. In case they do, we don't want to\n                        // fail the render phase where it didn't fail before. So we log it.\n                        // After these have been cleaned up, we'll let them throw.\n                        try {\n                            // This is intentionally an invariant that gets caught. It's the same\n                            // behavior as without this statement except with a better message.\n                            if (typeof typeSpecs[typeSpecName] !== \"function\") {\n                                // eslint-disable-next-line react-internal/prod-error-codes\n                                var err = Error((componentName || \"React class\") + \": \" + location + \" type `\" + typeSpecName + \"` is invalid; \" + \"it must be a function, usually from the `prop-types` package, but received `\" + typeof typeSpecs[typeSpecName] + \"`.\" + \"This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.\");\n                                err.name = \"Invariant Violation\";\n                                throw err;\n                            }\n                            error$1 = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, \"SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED\");\n                        } catch (ex) {\n                            error$1 = ex;\n                        }\n                        if (error$1 && !(error$1 instanceof Error)) {\n                            setCurrentlyValidatingElement$1(element);\n                            error(\"%s: type specification of %s\" + \" `%s` is invalid; the type checker \" + \"function must return `null` or an `Error` but returned a %s. \" + \"You may have forgotten to pass an argument to the type checker \" + \"creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and \" + \"shape all require an argument).\", componentName || \"React class\", location, typeSpecName, typeof error$1);\n                            setCurrentlyValidatingElement$1(null);\n                        }\n                        if (error$1 instanceof Error && !(error$1.message in loggedTypeFailures)) {\n                            // Only monitor this failure once because there tends to be a lot of the\n                            // same error.\n                            loggedTypeFailures[error$1.message] = true;\n                            setCurrentlyValidatingElement$1(element);\n                            error(\"Failed %s type: %s\", location, error$1.message);\n                            setCurrentlyValidatingElement$1(null);\n                        }\n                    }\n                }\n            }\n        }\n        var isArrayImpl = Array.isArray; // eslint-disable-next-line no-redeclare\n        function isArray(a) {\n            return isArrayImpl(a);\n        }\n        /*\n * The `'' + value` pattern (used in perf-sensitive code) throws for Symbol\n * and Temporal.* types. See https://github.com/facebook/react/pull/22064.\n *\n * The functions in this module will throw an easier-to-understand,\n * easier-to-debug exception with a clear errors message message explaining the\n * problem. (Instead of a confusing exception thrown inside the implementation\n * of the `value` object).\n */ // $FlowFixMe[incompatible-return] only called in DEV, so void return is not possible.\n        function typeName(value) {\n            {\n                // toStringTag is needed for namespaced types like Temporal.Instant\n                var hasToStringTag = typeof Symbol === \"function\" && Symbol.toStringTag;\n                var type = hasToStringTag && value[Symbol.toStringTag] || value.constructor.name || \"Object\"; // $FlowFixMe[incompatible-return]\n                return type;\n            }\n        } // $FlowFixMe[incompatible-return] only called in DEV, so void return is not possible.\n        function willCoercionThrow(value) {\n            {\n                try {\n                    testStringCoercion(value);\n                    return false;\n                } catch (e) {\n                    return true;\n                }\n            }\n        }\n        function testStringCoercion(value) {\n            // If you ended up here by following an exception call stack, here's what's\n            // happened: you supplied an object or symbol value to React (as a prop, key,\n            // DOM attribute, CSS property, string ref, etc.) and when React tried to\n            // coerce it to a string using `'' + value`, an exception was thrown.\n            //\n            // The most common types that will cause this exception are `Symbol` instances\n            // and Temporal objects like `Temporal.Instant`. But any object that has a\n            // `valueOf` or `[Symbol.toPrimitive]` method that throws will also cause this\n            // exception. (Library authors do this to prevent users from using built-in\n            // numeric operators like `+` or comparison operators like `>=` because custom\n            // methods are needed to perform accurate arithmetic or comparison.)\n            //\n            // To fix the problem, coerce this object or symbol value to a string before\n            // passing it to React. The most reliable way is usually `String(value)`.\n            //\n            // To find which value is throwing, check the browser or debugger console.\n            // Before this exception was thrown, there should be `console.error` output\n            // that shows the type (Symbol, Temporal.PlainDate, etc.) that caused the\n            // problem and how that type was used: key, atrribute, input value prop, etc.\n            // In most cases, this console output also shows the component and its\n            // ancestor components where the exception happened.\n            //\n            // eslint-disable-next-line react-internal/safe-string-coercion\n            return \"\" + value;\n        }\n        function checkKeyStringCoercion(value) {\n            {\n                if (willCoercionThrow(value)) {\n                    error(\"The provided key is an unsupported type %s.\" + \" This value must be coerced to a string before using it here.\", typeName(value));\n                    return testStringCoercion(value); // throw (to help callers find troubleshooting comments)\n                }\n            }\n        }\n        var ReactCurrentOwner$1 = ReactSharedInternals.ReactCurrentOwner;\n        var RESERVED_PROPS = {\n            key: true,\n            ref: true,\n            __self: true,\n            __source: true\n        };\n        var specialPropKeyWarningShown;\n        var specialPropRefWarningShown;\n        var didWarnAboutStringRefs;\n        {\n            didWarnAboutStringRefs = {};\n        }\n        function hasValidRef(config) {\n            {\n                if (hasOwnProperty.call(config, \"ref\")) {\n                    var getter = Object.getOwnPropertyDescriptor(config, \"ref\").get;\n                    if (getter && getter.isReactWarning) {\n                        return false;\n                    }\n                }\n            }\n            return config.ref !== undefined;\n        }\n        function hasValidKey(config) {\n            {\n                if (hasOwnProperty.call(config, \"key\")) {\n                    var getter = Object.getOwnPropertyDescriptor(config, \"key\").get;\n                    if (getter && getter.isReactWarning) {\n                        return false;\n                    }\n                }\n            }\n            return config.key !== undefined;\n        }\n        function warnIfStringRefCannotBeAutoConverted(config, self) {\n            {\n                if (typeof config.ref === \"string\" && ReactCurrentOwner$1.current && self && ReactCurrentOwner$1.current.stateNode !== self) {\n                    var componentName = getComponentNameFromType(ReactCurrentOwner$1.current.type);\n                    if (!didWarnAboutStringRefs[componentName]) {\n                        error('Component \"%s\" contains the string ref \"%s\". ' + \"Support for string refs will be removed in a future major release. \" + \"This case cannot be automatically converted to an arrow function. \" + \"We ask you to manually fix this case by using useRef() or createRef() instead. \" + \"Learn more about using refs safely here: \" + \"https://reactjs.org/link/strict-mode-string-ref\", getComponentNameFromType(ReactCurrentOwner$1.current.type), config.ref);\n                        didWarnAboutStringRefs[componentName] = true;\n                    }\n                }\n            }\n        }\n        function defineKeyPropWarningGetter(props, displayName) {\n            {\n                var warnAboutAccessingKey = function() {\n                    if (!specialPropKeyWarningShown) {\n                        specialPropKeyWarningShown = true;\n                        error(\"%s: `key` is not a prop. Trying to access it will result \" + \"in `undefined` being returned. If you need to access the same \" + \"value within the child component, you should pass it as a different \" + \"prop. (https://reactjs.org/link/special-props)\", displayName);\n                    }\n                };\n                warnAboutAccessingKey.isReactWarning = true;\n                Object.defineProperty(props, \"key\", {\n                    get: warnAboutAccessingKey,\n                    configurable: true\n                });\n            }\n        }\n        function defineRefPropWarningGetter(props, displayName) {\n            {\n                var warnAboutAccessingRef = function() {\n                    if (!specialPropRefWarningShown) {\n                        specialPropRefWarningShown = true;\n                        error(\"%s: `ref` is not a prop. Trying to access it will result \" + \"in `undefined` being returned. If you need to access the same \" + \"value within the child component, you should pass it as a different \" + \"prop. (https://reactjs.org/link/special-props)\", displayName);\n                    }\n                };\n                warnAboutAccessingRef.isReactWarning = true;\n                Object.defineProperty(props, \"ref\", {\n                    get: warnAboutAccessingRef,\n                    configurable: true\n                });\n            }\n        }\n        /**\n * Factory method to create a new React element. This no longer adheres to\n * the class pattern, so do not use new to call it. Also, instanceof check\n * will not work. Instead test $$typeof field against Symbol.for('react.element') to check\n * if something is a React Element.\n *\n * @param {*} type\n * @param {*} props\n * @param {*} key\n * @param {string|object} ref\n * @param {*} owner\n * @param {*} self A *temporary* helper to detect places where `this` is\n * different from the `owner` when React.createElement is called, so that we\n * can warn. We want to get rid of owner and replace string `ref`s with arrow\n * functions, and as long as `this` and owner are the same, there will be no\n * change in behavior.\n * @param {*} source An annotation object (added by a transpiler or otherwise)\n * indicating filename, line number, and/or other information.\n * @internal\n */ function ReactElement(type, key, ref, self, source, owner, props) {\n            var element = {\n                // This tag allows us to uniquely identify this as a React Element\n                $$typeof: REACT_ELEMENT_TYPE,\n                // Built-in properties that belong on the element\n                type: type,\n                key: key,\n                ref: ref,\n                props: props,\n                // Record the component responsible for creating this element.\n                _owner: owner\n            };\n            {\n                // The validation flag is currently mutative. We put it on\n                // an external backing store so that we can freeze the whole object.\n                // This can be replaced with a WeakMap once they are implemented in\n                // commonly used development environments.\n                element._store = {}; // To make comparing ReactElements easier for testing purposes, we make\n                // the validation flag non-enumerable (where possible, which should\n                // include every environment we run tests in), so the test framework\n                // ignores it.\n                Object.defineProperty(element._store, \"validated\", {\n                    configurable: false,\n                    enumerable: false,\n                    writable: true,\n                    value: false\n                }); // self and source are DEV only properties.\n                Object.defineProperty(element, \"_self\", {\n                    configurable: false,\n                    enumerable: false,\n                    writable: false,\n                    value: self\n                }); // Two elements created in two different places should be considered\n                // equal for testing purposes and therefore we hide it from enumeration.\n                Object.defineProperty(element, \"_source\", {\n                    configurable: false,\n                    enumerable: false,\n                    writable: false,\n                    value: source\n                });\n                if (Object.freeze) {\n                    Object.freeze(element.props);\n                    Object.freeze(element);\n                }\n            }\n            return element;\n        }\n        /**\n * https://github.com/reactjs/rfcs/pull/107\n * @param {*} type\n * @param {object} props\n * @param {string} key\n */ function jsxDEV$1(type, config, maybeKey, source, self) {\n            {\n                var propName; // Reserved names are extracted\n                var props = {};\n                var key = null;\n                var ref = null; // Currently, key can be spread in as a prop. This causes a potential\n                // issue if key is also explicitly declared (ie. <div {...props} key=\"Hi\" />\n                // or <div key=\"Hi\" {...props} /> ). We want to deprecate key spread,\n                // but as an intermediary step, we will use jsxDEV for everything except\n                // <div {...props} key=\"Hi\" />, because we aren't currently able to tell if\n                // key is explicitly declared to be undefined or not.\n                if (maybeKey !== undefined) {\n                    {\n                        checkKeyStringCoercion(maybeKey);\n                    }\n                    key = \"\" + maybeKey;\n                }\n                if (hasValidKey(config)) {\n                    {\n                        checkKeyStringCoercion(config.key);\n                    }\n                    key = \"\" + config.key;\n                }\n                if (hasValidRef(config)) {\n                    ref = config.ref;\n                    warnIfStringRefCannotBeAutoConverted(config, self);\n                } // Remaining properties are added to a new props object\n                for(propName in config){\n                    if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {\n                        props[propName] = config[propName];\n                    }\n                } // Resolve default props\n                if (type && type.defaultProps) {\n                    var defaultProps = type.defaultProps;\n                    for(propName in defaultProps){\n                        if (props[propName] === undefined) {\n                            props[propName] = defaultProps[propName];\n                        }\n                    }\n                }\n                if (key || ref) {\n                    var displayName = typeof type === \"function\" ? type.displayName || type.name || \"Unknown\" : type;\n                    if (key) {\n                        defineKeyPropWarningGetter(props, displayName);\n                    }\n                    if (ref) {\n                        defineRefPropWarningGetter(props, displayName);\n                    }\n                }\n                return ReactElement(type, key, ref, self, source, ReactCurrentOwner$1.current, props);\n            }\n        }\n        var ReactCurrentOwner = ReactSharedInternals.ReactCurrentOwner;\n        var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\n        var REACT_CLIENT_REFERENCE = Symbol.for(\"react.client.reference\");\n        function setCurrentlyValidatingElement(element) {\n            {\n                if (element) {\n                    var owner = element._owner;\n                    var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);\n                    ReactDebugCurrentFrame.setExtraStackFrame(stack);\n                } else {\n                    ReactDebugCurrentFrame.setExtraStackFrame(null);\n                }\n            }\n        }\n        var propTypesMisspellWarningShown;\n        {\n            propTypesMisspellWarningShown = false;\n        }\n        /**\n * Verifies the object is a ReactElement.\n * See https://reactjs.org/docs/react-api.html#isvalidelement\n * @param {?object} object\n * @return {boolean} True if `object` is a ReactElement.\n * @final\n */ function isValidElement(object) {\n            {\n                return typeof object === \"object\" && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;\n            }\n        }\n        function getDeclarationErrorAddendum() {\n            {\n                if (ReactCurrentOwner.current) {\n                    var name = getComponentNameFromType(ReactCurrentOwner.current.type);\n                    if (name) {\n                        return \"\\n\\nCheck the render method of `\" + name + \"`.\";\n                    }\n                }\n                return \"\";\n            }\n        }\n        function getSourceInfoErrorAddendum(source) {\n            {\n                if (source !== undefined) {\n                    var fileName = source.fileName.replace(/^.*[\\\\\\/]/, \"\");\n                    var lineNumber = source.lineNumber;\n                    return \"\\n\\nCheck your code at \" + fileName + \":\" + lineNumber + \".\";\n                }\n                return \"\";\n            }\n        }\n        /**\n * Warn if there's no key explicitly set on dynamic arrays of children or\n * object keys are not valid. This allows us to keep track of children between\n * updates.\n */ var ownerHasKeyUseWarning = {};\n        function getCurrentComponentErrorInfo(parentType) {\n            {\n                var info = getDeclarationErrorAddendum();\n                if (!info) {\n                    var parentName = getComponentNameFromType(parentType);\n                    if (parentName) {\n                        info = \"\\n\\nCheck the top-level render call using <\" + parentName + \">.\";\n                    }\n                }\n                return info;\n            }\n        }\n        /**\n * Warn if the element doesn't have an explicit key assigned to it.\n * This element is in an array. The array could grow and shrink or be\n * reordered. All children that haven't already been validated are required to\n * have a \"key\" property assigned to it. Error statuses are cached so a warning\n * will only be shown once.\n *\n * @internal\n * @param {ReactElement} element Element that requires a key.\n * @param {*} parentType element's parent's type.\n */ function validateExplicitKey(element, parentType) {\n            {\n                if (!element._store || element._store.validated || element.key != null) {\n                    return;\n                }\n                element._store.validated = true;\n                var currentComponentErrorInfo = getCurrentComponentErrorInfo(parentType);\n                if (ownerHasKeyUseWarning[currentComponentErrorInfo]) {\n                    return;\n                }\n                ownerHasKeyUseWarning[currentComponentErrorInfo] = true; // Usually the current owner is the offender, but if it accepts children as a\n                // property, it may be the creator of the child that's responsible for\n                // assigning it a key.\n                var childOwner = \"\";\n                if (element && element._owner && element._owner !== ReactCurrentOwner.current) {\n                    // Give the component that originally created this child.\n                    childOwner = \" It was passed a child from \" + getComponentNameFromType(element._owner.type) + \".\";\n                }\n                setCurrentlyValidatingElement(element);\n                error('Each child in a list should have a unique \"key\" prop.' + \"%s%s See https://reactjs.org/link/warning-keys for more information.\", currentComponentErrorInfo, childOwner);\n                setCurrentlyValidatingElement(null);\n            }\n        }\n        /**\n * Ensure that every element either is passed in a static location, in an\n * array with an explicit keys property defined, or in an object literal\n * with valid key property.\n *\n * @internal\n * @param {ReactNode} node Statically passed child of any type.\n * @param {*} parentType node's parent's type.\n */ function validateChildKeys(node, parentType) {\n            {\n                if (typeof node !== \"object\" || !node) {\n                    return;\n                }\n                if (node.$$typeof === REACT_CLIENT_REFERENCE) ;\n                else if (isArray(node)) {\n                    for(var i = 0; i < node.length; i++){\n                        var child = node[i];\n                        if (isValidElement(child)) {\n                            validateExplicitKey(child, parentType);\n                        }\n                    }\n                } else if (isValidElement(node)) {\n                    // This element was passed in a valid location.\n                    if (node._store) {\n                        node._store.validated = true;\n                    }\n                } else {\n                    var iteratorFn = getIteratorFn(node);\n                    if (typeof iteratorFn === \"function\") {\n                        // Entry iterators used to provide implicit keys,\n                        // but now we print a separate warning for them later.\n                        if (iteratorFn !== node.entries) {\n                            var iterator = iteratorFn.call(node);\n                            var step;\n                            while(!(step = iterator.next()).done){\n                                if (isValidElement(step.value)) {\n                                    validateExplicitKey(step.value, parentType);\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        /**\n * Given an element, validate that its props follow the propTypes definition,\n * provided by the type.\n *\n * @param {ReactElement} element\n */ function validatePropTypes(element) {\n            {\n                var type = element.type;\n                if (type === null || type === undefined || typeof type === \"string\") {\n                    return;\n                }\n                if (type.$$typeof === REACT_CLIENT_REFERENCE) {\n                    return;\n                }\n                var propTypes;\n                if (typeof type === \"function\") {\n                    propTypes = type.propTypes;\n                } else if (typeof type === \"object\" && (type.$$typeof === REACT_FORWARD_REF_TYPE || // Note: Memo only checks outer props here.\n                // Inner props are checked in the reconciler.\n                type.$$typeof === REACT_MEMO_TYPE)) {\n                    propTypes = type.propTypes;\n                } else {\n                    return;\n                }\n                if (propTypes) {\n                    // Intentionally inside to avoid triggering lazy initializers:\n                    var name = getComponentNameFromType(type);\n                    checkPropTypes(propTypes, element.props, \"prop\", name, element);\n                } else if (type.PropTypes !== undefined && !propTypesMisspellWarningShown) {\n                    propTypesMisspellWarningShown = true; // Intentionally inside to avoid triggering lazy initializers:\n                    var _name = getComponentNameFromType(type);\n                    error(\"Component %s declared `PropTypes` instead of `propTypes`. Did you misspell the property assignment?\", _name || \"Unknown\");\n                }\n                if (typeof type.getDefaultProps === \"function\" && !type.getDefaultProps.isReactClassApproved) {\n                    error(\"getDefaultProps is only used on classic React.createClass \" + \"definitions. Use a static property named `defaultProps` instead.\");\n                }\n            }\n        }\n        /**\n * Given a fragment, validate that it can only be provided with fragment props\n * @param {ReactElement} fragment\n */ function validateFragmentProps(fragment) {\n            {\n                var keys = Object.keys(fragment.props);\n                for(var i = 0; i < keys.length; i++){\n                    var key = keys[i];\n                    if (key !== \"children\" && key !== \"key\") {\n                        setCurrentlyValidatingElement(fragment);\n                        error(\"Invalid prop `%s` supplied to `React.Fragment`. \" + \"React.Fragment can only have `key` and `children` props.\", key);\n                        setCurrentlyValidatingElement(null);\n                        break;\n                    }\n                }\n                if (fragment.ref !== null) {\n                    setCurrentlyValidatingElement(fragment);\n                    error(\"Invalid attribute `ref` supplied to `React.Fragment`.\");\n                    setCurrentlyValidatingElement(null);\n                }\n            }\n        }\n        var didWarnAboutKeySpread = {};\n        function jsxWithValidation(type, props, key, isStaticChildren, source, self) {\n            {\n                var validType = isValidElementType(type); // We warn in this case but don't throw. We expect the element creation to\n                // succeed and there will likely be errors in render.\n                if (!validType) {\n                    var info = \"\";\n                    if (type === undefined || typeof type === \"object\" && type !== null && Object.keys(type).length === 0) {\n                        info += \" You likely forgot to export your component from the file \" + \"it's defined in, or you might have mixed up default and named imports.\";\n                    }\n                    var sourceInfo = getSourceInfoErrorAddendum(source);\n                    if (sourceInfo) {\n                        info += sourceInfo;\n                    } else {\n                        info += getDeclarationErrorAddendum();\n                    }\n                    var typeString;\n                    if (type === null) {\n                        typeString = \"null\";\n                    } else if (isArray(type)) {\n                        typeString = \"array\";\n                    } else if (type !== undefined && type.$$typeof === REACT_ELEMENT_TYPE) {\n                        typeString = \"<\" + (getComponentNameFromType(type.type) || \"Unknown\") + \" />\";\n                        info = \" Did you accidentally export a JSX literal instead of a component?\";\n                    } else {\n                        typeString = typeof type;\n                    }\n                    error(\"React.jsx: type is invalid -- expected a string (for \" + \"built-in components) or a class/function (for composite \" + \"components) but got: %s.%s\", typeString, info);\n                }\n                var element = jsxDEV$1(type, props, key, source, self); // The result can be nullish if a mock or a custom function is used.\n                // TODO: Drop this when these are no longer allowed as the type argument.\n                if (element == null) {\n                    return element;\n                } // Skip key warning if the type isn't valid since our key validation logic\n                // doesn't expect a non-string/function type and can throw confusing errors.\n                // We don't want exception behavior to differ between dev and prod.\n                // (Rendering will throw with a helpful message and as soon as the type is\n                // fixed, the key warnings will appear.)\n                if (validType) {\n                    var children = props.children;\n                    if (children !== undefined) {\n                        if (isStaticChildren) {\n                            if (isArray(children)) {\n                                for(var i = 0; i < children.length; i++){\n                                    validateChildKeys(children[i], type);\n                                }\n                                if (Object.freeze) {\n                                    Object.freeze(children);\n                                }\n                            } else {\n                                error(\"React.jsx: Static children should always be an array. \" + \"You are likely explicitly calling React.jsxs or React.jsxDEV. \" + \"Use the Babel transform instead.\");\n                            }\n                        } else {\n                            validateChildKeys(children, type);\n                        }\n                    }\n                }\n                if (hasOwnProperty.call(props, \"key\")) {\n                    var componentName = getComponentNameFromType(type);\n                    var keys = Object.keys(props).filter(function(k) {\n                        return k !== \"key\";\n                    });\n                    var beforeExample = keys.length > 0 ? \"{key: someKey, \" + keys.join(\": ..., \") + \": ...}\" : \"{key: someKey}\";\n                    if (!didWarnAboutKeySpread[componentName + beforeExample]) {\n                        var afterExample = keys.length > 0 ? \"{\" + keys.join(\": ..., \") + \": ...}\" : \"{}\";\n                        error('A props object containing a \"key\" prop is being spread into JSX:\\n' + \"  let props = %s;\\n\" + \"  <%s {...props} />\\n\" + \"React keys must be passed directly to JSX without using spread:\\n\" + \"  let props = %s;\\n\" + \"  <%s key={someKey} {...props} />\", beforeExample, componentName, afterExample, componentName);\n                        didWarnAboutKeySpread[componentName + beforeExample] = true;\n                    }\n                }\n                if (type === REACT_FRAGMENT_TYPE) {\n                    validateFragmentProps(element);\n                } else {\n                    validatePropTypes(element);\n                }\n                return element;\n            }\n        } // These two functions exist to still get child warnings in dev\n        var jsxDEV = jsxWithValidation;\n        exports.Fragment = REACT_FRAGMENT_TYPE;\n        exports.jsxDEV = jsxDEV;\n    })();\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/compiled/react/cjs/react-jsx-dev-runtime.development.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js":
/*!******************************************************************!*\
  !*** ./node_modules/next/dist/compiled/react/jsx-dev-runtime.js ***!
  \******************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nif (false) {} else {\n    module.exports = __webpack_require__(/*! ./cjs/react-jsx-dev-runtime.development.js */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/cjs/react-jsx-dev-runtime.development.js\");\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvY29tcGlsZWQvcmVhY3QvanN4LWRldi1ydW50aW1lLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBRUEsSUFBSUEsS0FBeUIsRUFBYyxFQUUxQyxNQUFNO0lBQ0xDLDhMQUF5QjtBQUMzQiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2NvbXBpbGVkL3JlYWN0L2pzeC1kZXYtcnVudGltZS5qcz9jYTIwIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSAncHJvZHVjdGlvbicpIHtcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2Nqcy9yZWFjdC1qc3gtZGV2LXJ1bnRpbWUucHJvZHVjdGlvbi5taW4uanMnKTtcbn0gZWxzZSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvcmVhY3QtanN4LWRldi1ydW50aW1lLmRldmVsb3BtZW50LmpzJyk7XG59XG4iXSwibmFtZXMiOlsicHJvY2VzcyIsIm1vZHVsZSIsImV4cG9ydHMiLCJyZXF1aXJlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./app/globals.css":
/*!*************************!*\
  !*** ./app/globals.css ***!
  \*************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony default export */ __webpack_exports__[\"default\"] = (\"078f5bb1c4ec\");\nif (true) { module.hot.accept() }\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL2FwcC9nbG9iYWxzLmNzcyIsIm1hcHBpbmdzIjoiO0FBQUEsK0RBQWUsY0FBYztBQUM3QixJQUFJLElBQVUsSUFBSSxpQkFBaUIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vYXBwL2dsb2JhbHMuY3NzP2JjNDciXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGRlZmF1bHQgXCIwNzhmNWJiMWM0ZWNcIlxuaWYgKG1vZHVsZS5ob3QpIHsgbW9kdWxlLmhvdC5hY2NlcHQoKSB9XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./app/globals.css\n"));

/***/ }),

/***/ "(app-pages-browser)/./app/contexts/LanguageContext.tsx":
/*!******************************************!*\
  !*** ./app/contexts/LanguageContext.tsx ***!
  \******************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   LanguageProvider: function() { return /* binding */ LanguageProvider; },\n/* harmony export */   useLanguage: function() { return /* binding */ useLanguage; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* __next_internal_client_entry_do_not_use__ LanguageProvider,useLanguage auto */ \nvar _s = $RefreshSig$(), _s1 = $RefreshSig$();\n\nconst translations = {\n    en: {\n        artworks: \"artworks\",\n        photography: \"photography\",\n        music: \"music\",\n        contact: \"contact\"\n    },\n    fr: {\n        artworks: \"œuvres\",\n        photography: \"photographie\",\n        music: \"musique\",\n        contact: \"contact\"\n    },\n    ru: {\n        artworks: \"работы\",\n        photography: \"фотография\",\n        music: \"музыка\",\n        contact: \"контакт\"\n    },\n    ko: {\n        artworks: \"작품\",\n        photography: \"사진\",\n        music: \"음악\",\n        contact: \"연락처\"\n    },\n    zh: {\n        artworks: \"作品\",\n        photography: \"摄影\",\n        music: \"音乐\",\n        contact: \"联系\"\n    }\n};\nconst LanguageContext = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_1__.createContext)(undefined);\nfunction LanguageProvider(param) {\n    let { children } = param;\n    _s();\n    const [language, setLanguageState] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(\"en\");\n    const setLanguage = (lang)=>{\n        console.log(\"Changing language to:\", lang);\n        setLanguageState(lang);\n    };\n    const value = {\n        language,\n        setLanguage,\n        translations: translations[language]\n    };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(LanguageContext.Provider, {\n        value: value,\n        children: children\n    }, void 0, false, {\n        fileName: \"/Users/kdrama/Downloads/ALL WEBSITES/BACKUPS/THIRD ATTEMPT /app/contexts/LanguageContext.tsx\",\n        lineNumber: 68,\n        columnNumber: 5\n    }, this);\n}\n_s(LanguageProvider, \"hfjfyL9Fzya2rSDQOWlf8uzHwZ4=\");\n_c = LanguageProvider;\nfunction useLanguage() {\n    _s1();\n    const context = (0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)(LanguageContext);\n    if (context === undefined) {\n        throw new Error(\"useLanguage must be used within a LanguageProvider\");\n    }\n    return context;\n}\n_s1(useLanguage, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"LanguageProvider\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL2FwcC9jb250ZXh0cy9MYW5ndWFnZUNvbnRleHQudHN4IiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7QUFFOEU7QUFlOUUsTUFBTUksZUFBZTtJQUNuQkMsSUFBSTtRQUNGQyxVQUFVO1FBQ1ZDLGFBQWE7UUFDYkMsT0FBTztRQUNQQyxTQUFTO0lBQ1g7SUFDQUMsSUFBSTtRQUNGSixVQUFVO1FBQ1ZDLGFBQWE7UUFDYkMsT0FBTztRQUNQQyxTQUFTO0lBQ1g7SUFDQUUsSUFBSTtRQUNGTCxVQUFVO1FBQ1ZDLGFBQWE7UUFDYkMsT0FBTztRQUNQQyxTQUFTO0lBQ1g7SUFDQUcsSUFBSTtRQUNGTixVQUFVO1FBQ1ZDLGFBQWE7UUFDYkMsT0FBTztRQUNQQyxTQUFTO0lBQ1g7SUFDQUksSUFBSTtRQUNGUCxVQUFVO1FBQ1ZDLGFBQWE7UUFDYkMsT0FBTztRQUNQQyxTQUFTO0lBQ1g7QUFDRjtBQUVBLE1BQU1LLGdDQUFrQmIsb0RBQWFBLENBQWtDYztBQUVoRSxTQUFTQyxpQkFBaUIsS0FBcUM7UUFBckMsRUFBRUMsUUFBUSxFQUEyQixHQUFyQzs7SUFDL0IsTUFBTSxDQUFDQyxVQUFVQyxpQkFBaUIsR0FBR2hCLCtDQUFRQSxDQUFXO0lBRXhELE1BQU1pQixjQUFjLENBQUNDO1FBQ25CQyxRQUFRQyxHQUFHLENBQUMseUJBQXlCRjtRQUNyQ0YsaUJBQWlCRTtJQUNuQjtJQUVBLE1BQU1HLFFBQVE7UUFDWk47UUFDQUU7UUFDQWhCLGNBQWNBLFlBQVksQ0FBQ2MsU0FBUztJQUN0QztJQUVBLHFCQUNFLDhEQUFDSixnQkFBZ0JXLFFBQVE7UUFBQ0QsT0FBT0E7a0JBQzlCUDs7Ozs7O0FBR1A7R0FuQmdCRDtLQUFBQTtBQXFCVCxTQUFTVTs7SUFDZCxNQUFNQyxVQUFVekIsaURBQVVBLENBQUNZO0lBQzNCLElBQUlhLFlBQVlaLFdBQVc7UUFDekIsTUFBTSxJQUFJYSxNQUFNO0lBQ2xCO0lBQ0EsT0FBT0Q7QUFDVDtJQU5nQkQiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vYXBwL2NvbnRleHRzL0xhbmd1YWdlQ29udGV4dC50c3g/NTE5NSJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIGNsaWVudCc7XG5cbmltcG9ydCBSZWFjdCwgeyBjcmVhdGVDb250ZXh0LCB1c2VDb250ZXh0LCB1c2VTdGF0ZSwgUmVhY3ROb2RlIH0gZnJvbSAncmVhY3QnO1xuXG50eXBlIExhbmd1YWdlID0gJ2VuJyB8ICdmcicgfCAncnUnIHwgJ2tvJyB8ICd6aCc7XG5cbmludGVyZmFjZSBMYW5ndWFnZUNvbnRleHRUeXBlIHtcbiAgbGFuZ3VhZ2U6IExhbmd1YWdlO1xuICBzZXRMYW5ndWFnZTogKGxhbmc6IExhbmd1YWdlKSA9PiB2b2lkO1xuICB0cmFuc2xhdGlvbnM6IHtcbiAgICBhcnR3b3Jrczogc3RyaW5nO1xuICAgIHBob3RvZ3JhcGh5OiBzdHJpbmc7XG4gICAgbXVzaWM6IHN0cmluZztcbiAgICBjb250YWN0OiBzdHJpbmc7XG4gIH07XG59XG5cbmNvbnN0IHRyYW5zbGF0aW9ucyA9IHtcbiAgZW46IHtcbiAgICBhcnR3b3JrczogJ2FydHdvcmtzJyxcbiAgICBwaG90b2dyYXBoeTogJ3Bob3RvZ3JhcGh5JyxcbiAgICBtdXNpYzogJ211c2ljJyxcbiAgICBjb250YWN0OiAnY29udGFjdCdcbiAgfSxcbiAgZnI6IHtcbiAgICBhcnR3b3JrczogJ8WTdXZyZXMnLFxuICAgIHBob3RvZ3JhcGh5OiAncGhvdG9ncmFwaGllJyxcbiAgICBtdXNpYzogJ211c2lxdWUnLFxuICAgIGNvbnRhY3Q6ICdjb250YWN0J1xuICB9LFxuICBydToge1xuICAgIGFydHdvcmtzOiAn0YDQsNCx0L7RgtGLJyxcbiAgICBwaG90b2dyYXBoeTogJ9GE0L7RgtC+0LPRgNCw0YTQuNGPJyxcbiAgICBtdXNpYzogJ9C80YPQt9GL0LrQsCcsXG4gICAgY29udGFjdDogJ9C60L7QvdGC0LDQutGCJ1xuICB9LFxuICBrbzoge1xuICAgIGFydHdvcmtzOiAn7J6R7ZKIJyxcbiAgICBwaG90b2dyYXBoeTogJ+yCrOynhCcsXG4gICAgbXVzaWM6ICfsnYzslYUnLFxuICAgIGNvbnRhY3Q6ICfsl7Drnb3sspgnXG4gIH0sXG4gIHpoOiB7XG4gICAgYXJ0d29ya3M6ICfkvZzlk4EnLFxuICAgIHBob3RvZ3JhcGh5OiAn5pGE5b2xJyxcbiAgICBtdXNpYzogJ+mfs+S5kCcsXG4gICAgY29udGFjdDogJ+iBlOezuydcbiAgfVxufTtcblxuY29uc3QgTGFuZ3VhZ2VDb250ZXh0ID0gY3JlYXRlQ29udGV4dDxMYW5ndWFnZUNvbnRleHRUeXBlIHwgdW5kZWZpbmVkPih1bmRlZmluZWQpO1xuXG5leHBvcnQgZnVuY3Rpb24gTGFuZ3VhZ2VQcm92aWRlcih7IGNoaWxkcmVuIH06IHsgY2hpbGRyZW46IFJlYWN0Tm9kZSB9KSB7XG4gIGNvbnN0IFtsYW5ndWFnZSwgc2V0TGFuZ3VhZ2VTdGF0ZV0gPSB1c2VTdGF0ZTxMYW5ndWFnZT4oJ2VuJyk7XG5cbiAgY29uc3Qgc2V0TGFuZ3VhZ2UgPSAobGFuZzogTGFuZ3VhZ2UpID0+IHtcbiAgICBjb25zb2xlLmxvZygnQ2hhbmdpbmcgbGFuZ3VhZ2UgdG86JywgbGFuZyk7XG4gICAgc2V0TGFuZ3VhZ2VTdGF0ZShsYW5nKTtcbiAgfTtcblxuICBjb25zdCB2YWx1ZSA9IHtcbiAgICBsYW5ndWFnZSxcbiAgICBzZXRMYW5ndWFnZSxcbiAgICB0cmFuc2xhdGlvbnM6IHRyYW5zbGF0aW9uc1tsYW5ndWFnZV1cbiAgfTtcblxuICByZXR1cm4gKFxuICAgIDxMYW5ndWFnZUNvbnRleHQuUHJvdmlkZXIgdmFsdWU9e3ZhbHVlfT5cbiAgICAgIHtjaGlsZHJlbn1cbiAgICA8L0xhbmd1YWdlQ29udGV4dC5Qcm92aWRlcj5cbiAgKTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHVzZUxhbmd1YWdlKCkge1xuICBjb25zdCBjb250ZXh0ID0gdXNlQ29udGV4dChMYW5ndWFnZUNvbnRleHQpO1xuICBpZiAoY29udGV4dCA9PT0gdW5kZWZpbmVkKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKCd1c2VMYW5ndWFnZSBtdXN0IGJlIHVzZWQgd2l0aGluIGEgTGFuZ3VhZ2VQcm92aWRlcicpO1xuICB9XG4gIHJldHVybiBjb250ZXh0O1xufSAiXSwibmFtZXMiOlsiUmVhY3QiLCJjcmVhdGVDb250ZXh0IiwidXNlQ29udGV4dCIsInVzZVN0YXRlIiwidHJhbnNsYXRpb25zIiwiZW4iLCJhcnR3b3JrcyIsInBob3RvZ3JhcGh5IiwibXVzaWMiLCJjb250YWN0IiwiZnIiLCJydSIsImtvIiwiemgiLCJMYW5ndWFnZUNvbnRleHQiLCJ1bmRlZmluZWQiLCJMYW5ndWFnZVByb3ZpZGVyIiwiY2hpbGRyZW4iLCJsYW5ndWFnZSIsInNldExhbmd1YWdlU3RhdGUiLCJzZXRMYW5ndWFnZSIsImxhbmciLCJjb25zb2xlIiwibG9nIiwidmFsdWUiLCJQcm92aWRlciIsInVzZUxhbmd1YWdlIiwiY29udGV4dCIsIkVycm9yIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./app/contexts/LanguageContext.tsx\n"));

/***/ }),

/***/ "(app-pages-browser)/./app/contexts/MusicPlayerContext.tsx":
/*!*********************************************!*\
  !*** ./app/contexts/MusicPlayerContext.tsx ***!
  \*********************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   MusicPlayerProvider: function() { return /* binding */ MusicPlayerProvider; },\n/* harmony export */   useMusicPlayer: function() { return /* binding */ useMusicPlayer; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* __next_internal_client_entry_do_not_use__ MusicPlayerProvider,useMusicPlayer auto */ \nvar _s = $RefreshSig$(), _s1 = $RefreshSig$();\n\nconst tracks = [\n    // ... (full list \n    {\n        title: \"FOMDJ\",\n        artist: \"Playboi Carti\",\n        album: \"MUSIC - SORRY 4 DA WAIT\",\n        src: \"https://res.cloudinary.com/dynqvvscs/video/upload/v1748823825/FOMDJ_vmuoec.mp3\",\n        cover: \"https://res.cloudinary.com/dynqvvscs/image/upload/v1748822528/MUSIC_kyv7kl.jpg\"\n    },\n    {\n        title: \"Nothing But Net\",\n        artist: \"Travis Scott\",\n        album: \"Nothing But Net\",\n        src: \"https://res.cloudinary.com/your-cloud-name/video/upload/v1/Nothing_But_Net.mp3\",\n        cover: \"https://res.cloudinary.com/your-cloud-name/image/upload/v1/nothing_but_net.jpg\"\n    },\n    {\n        title: \"Nothing But Net (feat. Young Thug & PARTYNEXTDOOR)\",\n        artist: \"Travis Scott\",\n        album: \"Nothing But Net\",\n        src: \"Nothing But Net.mp3\",\n        cover: \"assets/images/nothing but net.jpg\"\n    },\n    {\n        title: \"Faith\",\n        artist: \"Lil Uzi Vert\",\n        album: \"Faith\",\n        src: \"https://res.cloudinary.com/dynqvvscs/video/upload/v1748823791/Faith_nc4fcd.mp3\",\n        cover: \"assets/images/X.png\"\n    },\n    {\n        title: \"PORSCHE POET\",\n        artist: \"Lancey Foux\",\n        album: \"PORSCHE POET\",\n        src: \"https://res.cloudinary.com/dynqvvscs/video/upload/v1748823957/PORSCHE_POET_jajxv2.mp3\",\n        cover: \"https://res.cloudinary.com/dynqvvscs/image/upload/v1748822530/PORSCHE_POET_qxf81e.jpg\"\n    },\n    {\n        title: \"ICY GRL\",\n        artist: \"Saweetie\",\n        album: \"ICY GRL\",\n        src: \"https://res.cloudinary.com/dynqvvscs/video/upload/v1748823887/ICY_GRL_ocmlzw.mp3\",\n        cover: \"https://res.cloudinary.com/dynqvvscs/image/upload/v1748822525/ICY_GRL_kpehqt.jpg\"\n    },\n    {\n        title: \"Stuck\",\n        artist: \"Miss A\",\n        album: \"Colors\",\n        src: \"https://res.cloudinary.com/dynqvvscs/video/upload/v1748823977/STUCK_vwndbj.mp3\",\n        cover: \"https://res.cloudinary.com/dynqvvscs/image/upload/v1748822532/STUCK_yi0pwc.jpg\"\n    },\n    {\n        title: \"Best Friend\",\n        artist: \"Nettspend\",\n        album: \"Best Friend\",\n        src: \"https://res.cloudinary.com/dynqvvscs/video/upload/v1748823640/BEST_FRIEND_h7dtmx.mp3\",\n        cover: \"assets/images/BEST FRIEND.jpg\"\n    },\n    {\n        title: \"MMS\",\n        artist: \"Полка\",\n        album: \"MMS\",\n        src: \"https://res.cloudinary.com/dynqvvscs/video/upload/v1748823908/MMS_rkwhpp.mp3\",\n        cover: \"https://res.cloudinary.com/dynqvvscs/image/upload/v1748822528/MMS_hcgvij.jpg\"\n    },\n    {\n        title: \"Like This\",\n        artist: \"박혜진 Park Hye Jin\",\n        album: \"How can I\",\n        src: \"https://res.cloudinary.com/dynqvvscs/video/upload/v1748823904/LIKE_THIS_jkdt6z.mp3\",\n        cover: \"https://res.cloudinary.com/dynqvvscs/image/upload/v1748822527/LIKE_THIS_r01apj.jpg\"\n    },\n    {\n        title: \"XOXO\",\n        artist: \"NMIXX\",\n        album: \"Fe304: BREAK\",\n        src: \"https://res.cloudinary.com/dynqvvscs/video/upload/v1748823999/XOXO_hizqaq.mp3\",\n        cover: \"https://res.cloudinary.com/dynqvvscs/image/upload/v1748822538/XOXO_ym9lio.jpg\"\n    },\n    {\n        title: \"Safe\",\n        artist: \"Young Thug\",\n        album: \"Safe\",\n        src: \"https://res.cloudinary.com/dynqvvscs/video/upload/v1748823969/SAFE_jkyiim.mp3\",\n        cover: \"https://res.cloudinary.com/dynqvvscs/image/upload/v1748822532/SAFE_kdypcm.jpg\"\n    },\n    {\n        title: \"russian opps\",\n        artist: \"Osamason\",\n        album: \"russian opps\",\n        src: \"https://res.cloudinary.com/dynqvvscs/video/upload/v1748823961/RUSSIAN_OPPS_hjslbd.mp3\",\n        cover: \"https://res.cloudinary.com/dynqvvscs/image/upload/v1748822532/RUSSIAN_OPPS_gnjiw5.jpg\"\n    },\n    {\n        title: \"Avril 14th\",\n        artist: \"Aphex Twin\",\n        album: \"Drukqs\",\n        src: \"https://res.cloudinary.com/dynqvvscs/video/upload/v1748823639/AVRIL_14TH_lztwke.mp3\",\n        cover: \"assets/images/AVRIL 14TH.jpg\"\n    },\n    {\n        title: \"Feeling's Gone\",\n        artist: \"Frank Ocean\",\n        album: \"Feeling's Gone\",\n        src: \"https://res.cloudinary.com/dynqvvscs/video/upload/v1748823795/FEELINGS_GONE_l7jjs3.mp3\",\n        cover: \"https://res.cloudinary.com/dynqvvscs/image/upload/v1748822534/X_lmigbb.png\"\n    },\n    {\n        title: \"These Days\",\n        artist: \"Frank Ocean\",\n        album: \"These Days\",\n        src: \"https://res.cloudinary.com/dynqvvscs/video/upload/v1748824017/THESE_DAYS_tffn9i.wav\",\n        cover: \"https://res.cloudinary.com/dynqvvscs/image/upload/v1748822534/X_lmigbb.pngg\"\n    },\n    {\n        title: \"Like I'm Lying\",\n        artist: \"Lancey Foux\",\n        album: \"Like I'm Lying\",\n        src: \"https://res.cloudinary.com/dynqvvscs/video/upload/v1748823902/LIKE_IM_LYING_izwxbw.mp3\",\n        cover: \"https://res.cloudinary.com/dynqvvscs/image/upload/v1748822527/LIKE_IM_LYING_c6k2ho.jpg\"\n    },\n    {\n        title: \"Can't Be Us (Efan, Clou, JFEL Bootleg)\",\n        artist: \"Headie One\",\n        album: \"Can't Be Us\",\n        src: \"https://res.cloudinary.com/dynqvvscs/video/upload/v1748823751/CANT_BE_US_uw9cyt.mp3\",\n        cover: \"assets/images/CANT BE US.jpg\"\n    },\n    {\n        title: \"Moonlight\",\n        artist: \"Juice WRLD\",\n        album: \"Moonlight\",\n        src: \"https://res.cloudinary.com/dynqvvscs/video/upload/v1748823910/MOONLIGHT_tnlfjb.mp3\",\n        cover: \"https://res.cloudinary.com/dynqvvscs/image/upload/v1748822528/MOONLIGHT_zlwrra.jpg\"\n    },\n    {\n        title: \"Messenger\",\n        artist: \"YT\",\n        album: \"Messenger\",\n        src: \"https://res.cloudinary.com/dynqvvscs/video/upload/v1748823907/MESSENGER_fewlm2.mp3\",\n        cover: \"https://res.cloudinary.com/dynqvvscs/image/upload/v1748822529/MESSENGER_uyz3qt.png\"\n    },\n    {\n        title: \"BIG SCIENTIST\",\n        artist: \"Lil Yachty\",\n        album: \"Big Scientist\",\n        src: \"https://res.cloudinary.com/dynqvvscs/video/upload/v1748823643/BIG_SCIENTIST_xjmkyc.mp3\",\n        cover: \"assets/images/BIG SCIENTIST.jpg\"\n    },\n    {\n        title: \"2sick\",\n        artist: \"kwes e\",\n        album: \"2sick\",\n        src: \"https://res.cloudinary.com/dynqvvscs/video/upload/v1748823627/2SICK_weskoy.mp3\",\n        cover: \"assets/images/2SICK.jpg\"\n    },\n    {\n        title: \"In Here Somewhere\",\n        artist: \"Frank Ocean\",\n        album: \"ENDLESS\",\n        src: \"https://res.cloudinary.com/dynqvvscs/video/upload/v1748823888/IN_HERE_SOMEWHERE_fcpvpt.m4a\",\n        cover: \"assets/images/endless.jpg\"\n    },\n    {\n        title: \"Comme Des Gar\\xe7ons\",\n        artist: \"Frank Ocean\",\n        album: \"ENDLESS\",\n        src: \"https://res.cloudinary.com/dynqvvscs/video/upload/v1748823758/COMME_DES_GAR%C3%87ONS_gjh29x.m4a\",\n        cover: \"assets/images/endless.jpg\"\n    },\n    {\n        title: \"Impietas + Deathwish (ASR)\",\n        artist: \"Frank Ocean\",\n        album: \"ENDLESS\",\n        src: \"https://res.cloudinary.com/dynqvvscs/video/upload/v1748823890/IMPIETAS_DEATHWISH_gr1prv.m4a\",\n        cover: \"assets/images/endless.jpg\"\n    },\n    {\n        title: \"Sideways\",\n        artist: \"Frank Ocean\",\n        album: \"ENDLESS\",\n        src: \"https://res.cloudinary.com/dynqvvscs/video/upload/v1748823979/SIDEWAYS_hvuzwn.m4a\",\n        cover: \"assets/images/endless.jpg\"\n    },\n    {\n        title: \"CASH COW\",\n        artist: \"Kanye West & Skepta\",\n        album: \"CASH COW\",\n        src: \"https://res.cloudinary.com/dynqvvscs/video/upload/v1748823759/CASH_COW_uynq2y.mp3\",\n        cover: \"https://res.cloudinary.com/dynqvvscs/image/upload/v1748822534/X_lmigbb.png\"\n    },\n    {\n        title: \"Just Because\",\n        artist: \"Future & Young Thug\",\n        album: \"Just Because\",\n        src: \"https://res.cloudinary.com/dynqvvscs/video/upload/v1748823892/JUST_BECAUSE_x5si5n.mp3\",\n        cover: \"https://res.cloudinary.com/dynqvvscs/image/upload/v1748822526/JUST_BECAUSE_psl7s0.jpg\"\n    },\n    {\n        title: \"YUNG NIGGAZ\",\n        artist: \"Kodak Black\",\n        album: \"YUNG NIGGAZ\",\n        src: \"https://res.cloudinary.com/dynqvvscs/video/upload/v1748824006/YUNG_NIGGAZ_jrwtwe.mp3\",\n        cover: \"https://res.cloudinary.com/dynqvvscs/image/upload/v1748822588/YUNG_NIGGAZ_shl5en.jpg\"\n    },\n    {\n        title: \"Teamwork\",\n        artist: \"Young Thug & Gunna\",\n        album: \"Teamwork\",\n        src: \"https://res.cloudinary.com/dynqvvscs/video/upload/v1748823979/TEAMWORK_ormapi.mp3\",\n        cover: \"https://res.cloudinary.com/dynqvvscs/image/upload/v1748822532/TEAMWORK_ty9iqg.jpg\"\n    },\n    {\n        title: \"Digital Plane\",\n        artist: \"Young Thug & NAV\",\n        album: \"Digital Plane\",\n        src: \"https://res.cloudinary.com/dynqvvscs/video/upload/v1748823786/DIGITAL_PLANE_b2s2yr.mp3\",\n        cover: \"assets/images/DIGITAL PLANE.jpg\"\n    },\n    {\n        title: \"Vivienne Me\",\n        artist: \"The Act\",\n        album: \"Vivienne Me\",\n        src: \"https://res.cloudinary.com/dynqvvscs/video/upload/v1748823991/VIVIENNE_ME_uc2etx.mp3\",\n        cover: \"https://res.cloudinary.com/dynqvvscs/image/upload/v1748822534/VIVIENNE_ME_y6nzkz.jpg\"\n    },\n    {\n        title: \"Life Of Sins\",\n        artist: \"Young Thug\",\n        album: \"Life Of Sins\",\n        src: \"https://res.cloudinary.com/dynqvvscs/video/upload/v1748823901/LIFE_OF_SINS_qzaziv.mp3\",\n        cover: \"https://res.cloudinary.com/dynqvvscs/image/upload/v1748822527/LIFE_OF_SINS_qmqxsx.jpg\"\n    },\n    {\n        title: \"At The Gates\",\n        artist: \"Drake & Lil Uzi Vert\",\n        album: \"At The Gates\",\n        src: \"https://res.cloudinary.com/dynqvvscs/video/upload/v1748823643/AT_THE_GATES_itoy6f.mp3\",\n        cover: \"assets/images/AT THE GATES.jpg\"\n    },\n    {\n        title: \"Sky City\",\n        artist: \"Kanye West\",\n        album: \"Yandhi\",\n        src: \"https://res.cloudinary.com/dynqvvscs/video/upload/v1748823971/SKY_CITY_c8coxj.mp3\",\n        cover: \"https://res.cloudinary.com/dynqvvscs/image/upload/v1748822551/YANDHI_dfpgit.jpg\"\n    },\n    {\n        title: \"knotz\",\n        artist: \"xhujung\",\n        album: \"knotz\",\n        src: \"https://res.cloudinary.com/dynqvvscs/video/upload/v1748823897/KNOTZ_n0wh6i.mp3\",\n        cover: \"https://res.cloudinary.com/dynqvvscs/image/upload/v1748822528/KNOTZ_ga7xwx.png\"\n    },\n    {\n        title: \"Hoodway\",\n        artist: \"454\",\n        album: \"Hoodway\",\n        src: \"https://res.cloudinary.com/dynqvvscs/video/upload/v1748823882/HOODWAY_ge0klx.mp3\",\n        cover: \"https://res.cloudinary.com/dynqvvscs/image/upload/v1748822526/HOODWAY_phkodb.png\"\n    },\n    {\n        title: \"This Is God's Test\",\n        artist: \"Kanye West\",\n        album: \"Yandhi\",\n        src: \"https://res.cloudinary.com/dynqvvscs/video/upload/v1748823984/THIS_IS_GODS_TEST_upfiu7.mp3\",\n        cover: \"https://res.cloudinary.com/dynqvvscs/image/upload/v1748822551/YANDHI_dfpgit.jpg\"\n    },\n    {\n        title: \"keep me in the loop\",\n        artist: \"YT\",\n        album: \"keep me in the loop\",\n        src: \"https://res.cloudinary.com/dynqvvscs/video/upload/v1748823897/KEEP_ME_IN_THE_LOOP_d5bfak.mp3\",\n        cover: \"https://res.cloudinary.com/dynqvvscs/image/upload/v1748822527/KEEP_ME_IN_THE_LOOP_n8mxp1.png\"\n    },\n    {\n        title: \"Elle veut link\",\n        artist: \"Serane & MissingKasper\",\n        album: \"Elle veut link\",\n        src: \"https://res.cloudinary.com/dynqvvscs/video/upload/v1748823783/ELLE_VEUT_LINK_c85pkl.mp3\",\n        cover: \"assets/images/ELLE VEUT LINK.jpg\"\n    },\n    {\n        title: \"nobody 2saveus\",\n        artist: \"Ak4yla\",\n        album: \"nobody 2saveus\",\n        src: \"https://res.cloudinary.com/dynqvvscs/video/upload/v1748823915/NOBODY2SAVEUS_whqfcs.mp3\",\n        cover: \"https://res.cloudinary.com/dynqvvscs/image/upload/v1748822530/NOBODY_2SAVEUS_eykcrp.png\"\n    },\n    {\n        title: \"Money Make Her\",\n        artist: \"Lancey Foux\",\n        album: \"Money Make Her\",\n        src: \"https://res.cloudinary.com/dynqvvscs/video/upload/v1748823908/MONEY_MAKE_HER_mexx1m.mp3\",\n        cover: \"https://res.cloudinary.com/dynqvvscs/image/upload/v1748822528/MONEY_MAKE_HER_wcm6cn.jpg\"\n    },\n    {\n        title: \"VISA\",\n        artist: \"Lancey Foux\",\n        album: \"VISA\",\n        src: \"https://res.cloudinary.com/dynqvvscs/video/upload/v1748823992/VISA_r2sdjx.mp3\",\n        cover: \"https://res.cloudinary.com/dynqvvscs/image/upload/v1748822533/VISA_o6u3rd.jpg\"\n    },\n    {\n        title: \"24HRS\",\n        artist: \"Babyxsosa & PPGCASPER\",\n        album: \"24HRS\",\n        src: \"https://res.cloudinary.com/dynqvvscs/video/upload/v1748823628/24HRS_j6exks.mp3\",\n        cover: \"assets/images/24HRS.jpg\"\n    },\n    {\n        title: \"Odds\",\n        artist: \"Drugbwoy\",\n        album: \"Odds\",\n        src: \"https://res.cloudinary.com/dynqvvscs/video/upload/v1748823948/ODDS_ywnqdy.mp3\",\n        cover: \"https://res.cloudinary.com/dynqvvscs/image/upload/v1748822530/ODDS_kvzmxo.png\"\n    },\n    {\n        title: \"EVERYDAY\",\n        artist: \"POLO PERKS\",\n        album: \"EVERYDAY\",\n        src: \"https://res.cloudinary.com/dynqvvscs/video/upload/v1748823785/EVERYDAY_ozfeai.mp3\",\n        cover: \"assets/images/EVERYDAY.jpg\"\n    },\n    {\n        title: \"uh uh\",\n        artist: \"Babyxsosa\",\n        album: \"uh uh\",\n        src: \"https://res.cloudinary.com/dynqvvscs/video/upload/v1748823989/UH_UH_hrekxj.mp3\",\n        cover: \"https://res.cloudinary.com/dynqvvscs/image/upload/v1748822533/UH_UH_buk16i.png\"\n    },\n    {\n        title: \"Come on World, You Can't Go!\",\n        artist: \"Frank Ocean\",\n        album: \"Come on World, You Can't Go!\",\n        src: \"https://res.cloudinary.com/dynqvvscs/video/upload/v1748823769/COME_ON_WORLD_nekfuo.mp3\",\n        cover: \"assets/images/COMEONWORLD.jpg\"\n    },\n    {\n        title: \"gatlin gun\",\n        artist: \"Dave & AJ Tracey\",\n        album: \"gatlin gun\",\n        src: \"https://res.cloudinary.com/dynqvvscs/video/upload/v1748823868/GATLIN_GUN_ak2pu6.mp3\",\n        cover: \"assets/images/GATLIN GUN.jpg\"\n    },\n    {\n        title: \"Her Loss Interlude\",\n        artist: \"Drake & 21 Savage\",\n        album: \"Her Loss\",\n        src: \"https://res.cloudinary.com/dynqvvscs/video/upload/v1748823880/HER_LOSS_INTERLUDE_lfnl9x.mp3\",\n        cover: \"https://res.cloudinary.com/dynqvvscs/image/upload/v1748822525/INTERLUDE_i6s124.jpg\"\n    },\n    {\n        title: \"FAKE RUNTZ\",\n        artist: \"Caal Vo\",\n        album: \"FAKE RUNTZ\",\n        src: \"https://res.cloudinary.com/dynqvvscs/video/upload/v1748823792/FAKE_RUNTZ_orvoaf.mp3\",\n        cover: \"assets/images/FAKE RUNTZ.jpg\"\n    },\n    {\n        title: \"FERRIS WHEEL\",\n        artist: \"454\",\n        album: \"FERRIS WHEEL\",\n        src: \"https://res.cloudinary.com/dynqvvscs/video/upload/v1748823795/FERRIS_WHEEL_cwklyi.mp3\",\n        cover: \"assets/images/FERRIS WHEEL.jpg\"\n    },\n    {\n        title: \"J.O.B.\",\n        artist: \"Frank Ocean\",\n        album: \"The Lonny Breaux Collection\",\n        src: \"https://res.cloudinary.com/dynqvvscs/video/upload/v1748823891/J.O.B._p64qbs.mp3\",\n        cover: \"https://res.cloudinary.com/dynqvvscs/image/upload/v1748822527/LONNY_BREAUX_gnfvep.jpg\"\n    },\n    {\n        title: \"It's On You\",\n        artist: \"Chris Travis\",\n        album: \"Waterszn 2\",\n        src: \"https://res.cloudinary.com/dynqvvscs/video/upload/v1748823892/ITS_ON_YOU_jelteh.mp3\",\n        cover: \"https://res.cloudinary.com/dynqvvscs/image/upload/v1748822526/ITS_ON_YOU_ev7kzk.jpg\"\n    },\n    {\n        title: \"K-POP\",\n        artist: \"Lancey Foux\",\n        album: \"K-POP\",\n        src: \"https://res.cloudinary.com/dynqvvscs/video/upload/v1748823893/K-POP_zpvobd.mp3\",\n        cover: \"https://res.cloudinary.com/dynqvvscs/image/upload/v1748822526/K-POP_ofihrw.jpg\"\n    },\n    {\n        title: \"from me 2 you\",\n        artist: \"454\",\n        album: \"from me 2 you\",\n        src: \"https://res.cloudinary.com/dynqvvscs/video/upload/v1748823821/FROM_ME_2_YOU_oyvxpc.mp3\",\n        cover: \"assets/images/FROM ME 2 YOU.jpg\"\n    },\n    {\n        title: \"best for you\",\n        artist: \"Bakar\",\n        album: \"best for you\",\n        src: \"https://res.cloudinary.com/dynqvvscs/video/upload/v1748823636/BEST_FOR_YOU_zuqdzy.mp3\",\n        cover: \"assets/images/BEST FOR YOU.jpg\"\n    },\n    {\n        title: \"I Hate This\",\n        artist: \"evilgiane\",\n        album: \"I Hate This\",\n        src: \"https://res.cloudinary.com/dynqvvscs/video/upload/v1748823883/I_HATE_THIS_nhf2az.mp3\",\n        cover: \"https://res.cloudinary.com/dynqvvscs/image/upload/v1748822525/I_HATE_THIS_svob05.png\"\n    },\n    {\n        title: \"Whip Appeal\",\n        artist: \"Frank Ocean\",\n        album: \"UNRELEASED;misc\",\n        src: \"https://res.cloudinary.com/dynqvvscs/video/upload/v1748823999/WHIP_APPEAL_igycpz.mp3\",\n        cover: \"https://res.cloudinary.com/dynqvvscs/image/upload/v1748822534/UNRELEASED_MISC_uzejwa.jpg\"\n    },\n    {\n        title: \"4 True ''Thug Angel''\",\n        artist: \"Sickboyrari\",\n        album: \"4 True ''Thug Angel''\",\n        src: \"https://res.cloudinary.com/dynqvvscs/video/upload/v1748823628/4_TRUE_bjcuj2.mp3\",\n        cover: \"assets/images/4 TRUE.jpg\"\n    },\n    {\n        title: \"CAMPAIGN FREESTYLE\",\n        artist: \"Teezo Touchdown\",\n        album: \"CAMPAIGN FREESTYLE\",\n        src: \"https://res.cloudinary.com/dynqvvscs/video/upload/v1748823749/CAMPAIGN_FREESTYLE_v2v7ea.mp3\",\n        cover: \"assets/images/CAMPAIGN FREESTYLE.jpg\"\n    },\n    {\n        title: \"Eric Koston\",\n        artist: \"Kay9ine\",\n        album: \"Eric Koston\",\n        src: \"https://res.cloudinary.com/dynqvvscs/video/upload/v1748823787/ERIC_KOSTON_gjjqqr.mp3\",\n        cover: \"assets/images/ERIC KOSTON.jpg\"\n    },\n    {\n        title: \"GHOSTS IN MY ROOM\",\n        artist: \"evilgiane & harrison\",\n        album: \"GHOSTS IN MY ROOM\",\n        src: \"https://res.cloudinary.com/dynqvvscs/video/upload/v1748823876/GHOSTS_IN_MY_ROOM_zjwceu.mp3\",\n        cover: \"https://res.cloudinary.com/dynqvvscs/image/upload/v1748822526/GHOSTS_IN_MY_ROOM_tasntm.png\"\n    },\n    {\n        title: \"Truth\",\n        artist: \"evilgiane\",\n        album: \"bottle in the ocean\",\n        src: \"https://res.cloudinary.com/dynqvvscs/video/upload/v1748823986/TRUTH_eeo4yo.mp3\",\n        cover: \"assets/images/BOTTLE.jpg\"\n    },\n    {\n        title: \"GOLDEN AGE\",\n        artist: \"Yves Tumor\",\n        album: \"GOLDEN AGE\",\n        src: \"https://res.cloudinary.com/dynqvvscs/video/upload/v1748823876/GOLDEN_AGE_oy2gaj.mp3\",\n        cover: \"https://res.cloudinary.com/dynqvvscs/image/upload/v1748822524/GOLDEN_AGE_xyh2ov.png\"\n    },\n    {\n        title: \"samsung love\",\n        artist: \"yung bruh\",\n        album: \"samsung love\",\n        src: \"https://res.cloudinary.com/dynqvvscs/video/upload/v1748823967/SAMSUNG_LOVE_eemufz.mp3\",\n        cover: \"https://res.cloudinary.com/dynqvvscs/image/upload/v1748822532/SAMSUNG_LOVE_wbv1dc.png\"\n    },\n    {\n        title: \"Wither\",\n        artist: \"Frank Ocean\",\n        album: \"ENDLESS\",\n        src: \"https://res.cloudinary.com/dynqvvscs/video/upload/v1748823999/WITHER_bx8v7v.m4a\",\n        cover: \"assets/images/ENDLESS.jpg\"\n    },\n    {\n        title: \"yao ming\",\n        artist: \"Destroy Lonely\",\n        album: \"yao ming\",\n        src: \"https://res.cloudinary.com/dynqvvscs/video/upload/v1748824001/YAO_MING_sspjeg.mp3\",\n        cover: \"https://res.cloudinary.com/dynqvvscs/image/upload/v1748822576/YAO_MING_czrkke.png\"\n    },\n    {\n        title: \"pack a punch\",\n        artist: \"Destroy Lonely\",\n        album: \"pack a punch\",\n        src: \"https://res.cloudinary.com/dynqvvscs/video/upload/v1748823950/PACK_A_PUNCH_cxr46u.mp3\",\n        cover: \"https://res.cloudinary.com/dynqvvscs/image/upload/v1748822531/PACK_A_PUNCH_hmcu4q.png\"\n    },\n    {\n        title: \"Plenty\",\n        artist: \"PARTYNEXTDOOR\",\n        album: \"Plenty\",\n        src: \"https://res.cloudinary.com/dynqvvscs/video/upload/v1748823958/PLENTY_u2qaqe.mp3\",\n        cover: \"https://res.cloudinary.com/dynqvvscs/image/upload/v1748822531/PLENTY_u6xzgt.png\"\n    },\n    {\n        title: \"Some Of Your Love\",\n        artist: \"PARTYNEXTDOOR\",\n        album: \"Some Of Your Love\",\n        src: \"https://res.cloudinary.com/dynqvvscs/video/upload/v1748823977/SOME_OF_YOUR_LOVE_rywbg6.mp3\",\n        cover: \"https://res.cloudinary.com/dynqvvscs/image/upload/v1748822533/SOME_OF_YOUR_LOVE_oswnjq.png\"\n    },\n    {\n        title: \"RaRa\",\n        artist: \"Travis Scott & Lil Uzi Vert\",\n        album: \"RaRa\",\n        src: \"https://res.cloudinary.com/dynqvvscs/video/upload/v1748823960/RARA_tjcadk.mp3\",\n        cover: \"https://res.cloudinary.com/dynqvvscs/image/upload/v1748822532/RARA_sof67d.png\"\n    },\n    {\n        title: \"Whatever You Say\",\n        artist: \"PARTYNEXTDOOR\",\n        album: \"Whatever You Say\",\n        src: \"https://res.cloudinary.com/dynqvvscs/video/upload/v1748823994/WHATEVER_YOU_SAY_ogty8p.mp3\",\n        cover: \"https://res.cloudinary.com/dynqvvscs/image/upload/v1748822534/WHATEVER_YOU_SAY_glbpky.png\"\n    },\n    {\n        title: \"Part Time\",\n        artist: \"Travis Scott\",\n        album: \"Part Time\",\n        src: \"https://res.cloudinary.com/dynqvvscs/video/upload/v1748823949/PART_TIME_l4gbsn.mp3\",\n        cover: \"https://res.cloudinary.com/dynqvvscs/image/upload/v1748822531/PART_TIME_vcrzso.png\"\n    },\n    {\n        title: \"Fit ID\",\n        artist: \"Saint\\xe9\",\n        album: \"Fit ID\",\n        src: \"https://res.cloudinary.com/dynqvvscs/video/upload/v1748823798/FIT_ID_kbn8ld.mp3\",\n        cover: \"assets/images/FIT ID.jpg\"\n    },\n    {\n        title: \"Flatline\",\n        artist: \"Journals\",\n        album: \"Flatline\",\n        src: \"https://res.cloudinary.com/dynqvvscs/video/upload/v1748823820/FLATLINE_ghwcgw.mp3\",\n        cover: \"https://res.cloudinary.com/dynqvvscs/image/upload/v1748822526/JOURNALS_ounm63.jpg\"\n    },\n    {\n        title: \"Frontline\",\n        artist: \"Pa Salieu\",\n        album: \"Frontline\",\n        src: \"https://res.cloudinary.com/dynqvvscs/video/upload/v1748823826/FRONTLINE_gmztfw.mp3\",\n        cover: \"assets/images/FRONTLINE.jpg\"\n    },\n    {\n        title: \"Broke Boi\",\n        artist: \"Playboi Carti\",\n        album: \"Broke Boi\",\n        src: \"https://res.cloudinary.com/dynqvvscs/video/upload/v1748823648/BROKE_BOI_adxtem.mp3\",\n        cover: \"assets/images/BROKE BOI.jpg\"\n    },\n    {\n        title: \"FINE SHIT\",\n        artist: \"Playboi Carti\",\n        album: \"MUSIC\",\n        src: \"https://res.cloudinary.com/dynqvvscs/video/upload/v1748823796/FINE_SHIT_bpu2an.mp3\",\n        cover: \"https://res.cloudinary.com/dynqvvscs/image/upload/v1748822528/MUSIC_kyv7kl.jpg\"\n    },\n    {\n        title: \"FYBR (First Year Being Rich)\",\n        artist: \"A$AP Mob\",\n        album: \"Cozy Tapes Vol. 2: Too Cozy\",\n        src: \"https://res.cloudinary.com/dynqvvscs/video/upload/v1748823847/FYBR_zqd0hg.mp3\",\n        cover: \"assets/images/COZY TAPES 2.jpg\"\n    },\n    {\n        title: \"In Vein (feat. The Weeknd)\",\n        artist: \"Rick Ross \",\n        album: \"Mastermind\",\n        src: \"https://res.cloudinary.com/dynqvvscs/video/upload/v1748823896/IN_VEIN_lcrwbj.mp3\",\n        cover: \"https://res.cloudinary.com/dynqvvscs/image/upload/v1748822528/MASTERMIND_ghvjh6.jpg\"\n    },\n    {\n        title: \"Losing You\",\n        artist: \"Solange\",\n        album: \"Losing You\",\n        src: \"https://res.cloudinary.com/dynqvvscs/video/upload/v1748823905/LOSING_YOU_vxsxnm.mp3\",\n        cover: \"https://res.cloudinary.com/dynqvvscs/image/upload/v1748822528/LOSING_YOU_klwgq4.jpg\"\n    },\n    {\n        title: \"Love In The Sky\",\n        artist: \"The Weeknd\",\n        album: \"Kiss Land\",\n        src: \"https://res.cloudinary.com/dynqvvscs/video/upload/v1748823917/LOVE_IN_THE_SKY_c5txzm.mp3\",\n        cover: \"https://res.cloudinary.com/dynqvvscs/image/upload/v1748822527/KISS_LAND_kac0oa.jpg\"\n    },\n    {\n        title: \"No Sense\",\n        artist: \"Justin Bieber & Travis Scott\",\n        album: \"Purpose (Deluxe)\",\n        src: \"https://res.cloudinary.com/dynqvvscs/video/upload/v1748823920/NO_SENSE_cjcsum.mp3\",\n        cover: \"https://res.cloudinary.com/dynqvvscs/image/upload/v1748822531/PURPOSE_wtnld3.jpg\"\n    },\n    {\n        title: \"Right My Wrongs\",\n        artist: \"Bryson Tiller\",\n        album: \"T R A P S O U L\",\n        src: \"https://res.cloudinary.com/dynqvvscs/video/upload/v1748823963/RIGHT_MY_WRONGS_wz43d1.mp3\",\n        cover: \"https://res.cloudinary.com/dynqvvscs/image/upload/v1748822533/TRAPSOUL_yotpss.jpg\"\n    },\n    {\n        title: \"Solo\",\n        artist: \"FUTURE\",\n        album: \"HNDRXX\",\n        src: \"https://res.cloudinary.com/dynqvvscs/video/upload/v1748823988/SOLO_j0t4di.mp3\",\n        cover: \"https://res.cloudinary.com/dynqvvscs/image/upload/v1748822524/HNDRXX_ttnlk5.jpg\"\n    },\n    {\n        title: \"Green & Purple\",\n        artist: \"Travis Scott & Playboi Carti\",\n        album: \"Green & Purple\",\n        src: \"https://res.cloudinary.com/dynqvvscs/video/upload/v1748823882/GREEN_PURPLE_et5w1b.mp3\",\n        cover: \"https://res.cloudinary.com/dynqvvscs/image/upload/v1748822525/GREEN_PURPLE_h6ncm7.png\"\n    },\n    {\n        title: \"NASA\",\n        artist: \"Future\",\n        album: \"NASA\",\n        src: \"https://res.cloudinary.com/dynqvvscs/video/upload/v1748823912/NASA_bnspea.mp3\",\n        cover: \"https://res.cloudinary.com/dynqvvscs/image/upload/v1748822529/NASA_ojnbzp.png\"\n    },\n    {\n        title: \"Turn Your Phone Off\",\n        artist: \"PinkPantheress & Destroy Lonely\",\n        album: \"Turn Your Phone Off\",\n        src: \"https://res.cloudinary.com/dynqvvscs/video/upload/v1748823990/TURN_YOUR_PHONE_OFF_vxwxh2.mp3\",\n        cover: \"https://res.cloudinary.com/dynqvvscs/image/upload/v1748822533/TURN_YOUR_PHONE_OFF_dcjnoy.jpg\"\n    },\n    {\n        title: \"What You Doin\",\n        artist: \"Gucci Mane & Migos\",\n        album: \"Green Album\",\n        src: \"https://res.cloudinary.com/dynqvvscs/video/upload/v1748823996/WHAT_YOU_DOIN_tox15q.mp3\",\n        cover: \"https://res.cloudinary.com/dynqvvscs/image/upload/v1748822524/GREEN_ALBUM_rigb7o.jpg\"\n    },\n    {\n        title: \"Yeah, I Said It\",\n        artist: \"Rihanna\",\n        album: \"ANTI(Deluxe)\",\n        src: \"https://res.cloudinary.com/dynqvvscs/video/upload/v1748824005/YEAH_I_SAID_IT_vwzzi8.mp3\",\n        cover: \"assets/images/ANTI.jpg\"\n    },\n    {\n        title: \"ПОМНЮ\",\n        artist: \"unki\",\n        album: \"ПОМНЮ\",\n        src: \"https://res.cloudinary.com/dynqvvscs/video/upload/v1748824005/%D0%9F%D0%9E%D0%9C%D0%9D%D0%AE_srlh0n.mp3\",\n        cover: \"https://res.cloudinary.com/dynqvvscs/image/upload/v1748822601/%D0%9F%D0%9E%D0%9C%D0%9D%D0%AE_flreqa.jpg\"\n    },\n    {\n        title: \"Таллин\",\n        artist: \"JUGHEAD & Kinderlil\",\n        album: \"Less Is More\",\n        src: \"https://res.cloudinary.com/dynqvvscs/video/upload/v1748824008/%D0%A2%D0%90%D0%9B%D0%9B%D0%98%D0%9D_dfiyfc.mp3\",\n        cover: \"https://res.cloudinary.com/dynqvvscs/image/upload/v1748822527/LESS_IS_MORE_upwdak.jpg\"\n    },\n    {\n        title: \"Behave\",\n        artist: \"Fimiguerrero & Len\",\n        album: \"New World Order\",\n        src: \"https://res.cloudinary.com/dynqvvscs/video/upload/v1748823642/BEHAVE_r7okr3.mp3\",\n        cover: \"https://res.cloudinary.com/dynqvvscs/image/upload/v1748822529/NEW_WORLD_ORDER_s9v36d.jpg\"\n    },\n    {\n        title: \"Better By Yourself\",\n        artist: \"Babyxsosa\",\n        album: \"Better By Yourself\",\n        src: \"https://res.cloudinary.com/dynqvvscs/video/upload/v1748823647/BETTER_BY_YOURSELF_ughudn.mp3\",\n        cover: \"assets/images/BETTER BY YOURSELF.jpg\"\n    },\n    {\n        title: \"Chanel\",\n        artist: \"Babyxsosa\",\n        album: \"Chanel\",\n        src: \"https://res.cloudinary.com/dynqvvscs/video/upload/v1748823752/CHANEL_ju4ilh.mp3\",\n        cover: \"assets/images/CHANEL.jpg\"\n    },\n    {\n        title: \"Get Up\",\n        artist: \"New Jeans\",\n        album: \"Get Up\",\n        src: \"https://res.cloudinary.com/dynqvvscs/video/upload/v1748823875/GET_UP_ngihuu.mp3\",\n        cover: \"https://res.cloudinary.com/dynqvvscs/image/upload/v1748822524/GET_UP_ljgbeu.jpg\"\n    },\n    {\n        title: \"Designer Boi\",\n        artist: \"A$AP NAST & D33J\",\n        album: \"Designer Boi\",\n        src: \"https://res.cloudinary.com/dynqvvscs/video/upload/v1748823762/DESIGNER_BOI_w3kqgq.mp3\",\n        cover: \"assets/images/DESIGNER BOI.jpg\"\n    },\n    {\n        title: \"FACETIME / TEXTING\",\n        artist: \"Babyxsosa\",\n        album: \"FACETIME / TEXTING\",\n        src: \"https://res.cloudinary.com/dynqvvscs/video/upload/v1748823788/FACETIME_h9g0yv.mp3\",\n        cover: \"assets/images/FACETIME.jpg\"\n    },\n    {\n        title: \"Kin\",\n        artist: \"Kevin Abstract\",\n        album: \"American Boyfriend\",\n        src: \"https://res.cloudinary.com/dynqvvscs/video/upload/v1748903811/SpotiDownloader.com_-_Kin_-_Kevin_Abstract_homaag.mp3\",\n        cover: \"assets/images/AMERICAN BOYFRIEND.jpg\"\n    },\n    {\n        title: \"Les Fleurs\",\n        artist: \"Minnie Riperton\",\n        album: \"Les Fleurs\",\n        src: \"https://res.cloudinary.com/dynqvvscs/video/upload/v1748823908/LES_FLEURS_krlwnv.mp3\",\n        cover: \"https://res.cloudinary.com/dynqvvscs/image/upload/v1748822527/LES_FLEURS_nwiyzm.jpg\"\n    },\n    {\n        title: \"Losalamitoslatinfunklovesong\",\n        artist: \"Gene Harris\",\n        album: \"Astral Signals\",\n        src: \"https://res.cloudinary.com/dynqvvscs/video/upload/v1748823819/FUNKLOVESONG_s96qsj.mp3\",\n        cover: \"assets/images/ASTRAL SIGNALS.jpg\"\n    },\n    {\n        title: \"So In Love\",\n        artist: \"Curtis Mayfield\",\n        album: \"There's No Place Like America Today\",\n        src: \"https://res.cloudinary.com/dynqvvscs/video/upload/v1748823990/SO_IN_LOVE_ppkdsm.mp3\",\n        cover: \"https://res.cloudinary.com/dynqvvscs/image/upload/v1748822529/NO_PLACE_LIKE_AMERICA_aba1bq.jpg\"\n    },\n    {\n        title: \"Tension\",\n        artist: \"Central Cee\",\n        album: \"Wild West\",\n        src: \"https://res.cloudinary.com/dynqvvscs/video/upload/v1748823987/TENSION_wtenvn.mp3\",\n        cover: \"https://res.cloudinary.com/dynqvvscs/image/upload/v1748822534/WILD_WEST_ccfwzy.jpg\"\n    },\n    {\n        title: \"Three Cheers For My Baby\",\n        artist: \"Amnesty\",\n        album: \"Free Your Mind\",\n        src: \"https://res.cloudinary.com/dynqvvscs/video/upload/v1748823991/THREE_CHEERS_FOR_MY_BABY_wbpimf.mp3\",\n        cover: \"assets/images/FREE YOUR MIND.jpg\"\n    },\n    {\n        title: \"Warriors\",\n        artist: \"1017 ALYX 9SM & Lil Yachty\",\n        album: \"COMPILATION V1\",\n        src: \"https://res.cloudinary.com/dynqvvscs/video/upload/v1748823996/WARRIORS_zg6omc.mp3\",\n        cover: \"assets/images/COMPILATION V1.jpg\"\n    },\n    {\n        title: \"Wolves\",\n        artist: \"Kanye West\",\n        album: \"The Life of Pablo\",\n        src: \"https://res.cloudinary.com/dynqvvscs/video/upload/v1748824005/WOLVES_gpixb4.mp3\",\n        cover: \"https://res.cloudinary.com/dynqvvscs/image/upload/v1748822533/THE_LIFE_OF_PABLO_uaqs9b.jpg\"\n    },\n    {\n        title: \"Work Ya Wrist\",\n        artist: \"Gucci Mane & Yo Gotti\",\n        album: \"Chicken Talk\",\n        src: \"https://res.cloudinary.com/dynqvvscs/video/upload/v1748824008/WORK_YA_WRIST_rfr2on.mp3\",\n        cover: \"https://res.cloudinary.com/dynqvvscs/image/upload/v1748903644/Cover_of_Under_Arm_Kush_by_Gucci_Mane_sn01ul.jpg\"\n    },\n    {\n        title: \"Automatic\",\n        artist: \"Red Velvet\",\n        album: \"Ice Cream Cake\",\n        src: \"https://res.cloudinary.com/dynqvvscs/video/upload/v1748823641/AUTOMATIC_cd6nhg.mp3\",\n        cover: \"https://res.cloudinary.com/dynqvvscs/image/upload/v1748822525/ICE_CREAM_CAKE_jc2yta.jpg\"\n    },\n    {\n        title: \"All That Matters\",\n        artist: \"Justin Bieber\",\n        album: \"Journals\",\n        src: \"https://res.cloudinary.com/dynqvvscs/video/upload/v1748823631/ALL_THAT_MATTERS_fkfs8k.mp3\",\n        cover: \"assets/images/JOURNALS.jpg\"\n    },\n    {\n        title: \"Cool With You\",\n        artist: \"New Jeans\",\n        album: \"Get Up\",\n        src: \"https://res.cloudinary.com/dynqvvscs/video/upload/v1748823762/COOL_WITH_YOU_rz1vrj.mp3\",\n        cover: \"assets/images/GET UP.jpg\"\n    },\n    {\n        title: \"峠の恋人\",\n        artist: \"REGI & 陈彦希\",\n        album: \"峠の恋人\",\n        src: \"https://res.cloudinary.com/dynqvvscs/video/upload/v1748903845/SpotiDownloader.com_-_%E5%B3%A0%E3%81%AE%E6%81%8B%E4%BA%BA_-_REGI%E9%99%88%E5%BD%A6%E5%B8%8C_wli0rk.mp3\",\n        cover: \"https://res.cloudinary.com/dynqvvscs/image/upload/v1748903652/Cover_of_%E5%B3%A0%E3%81%AE%E6%81%8B%E4%BA%BA_by_REGI%E9%99%88%E5%BD%A6%E5%B8%8C_%E7%8E%8B%E5%97%A3%E5%B0%A7TURBO_z0fd7n.jpg\"\n    },\n    {\n        title: \"Мысли - Читаю о драгах\",\n        artist: \"ROCKET\",\n        album: \"SWAG SEASON 2\",\n        src: \"https://res.cloudinary.com/dynqvvscs/image/upload/v1748903650/Cover_of_%D0%9C%D1%8B%D1%81%D0%BB%D0%B8_-_%D0%A7%D0%B8%D1%82%D0%B0%D1%8E_%D0%BE_%D0%B4%D1%80%D0%B0%D0%B3%D0%B0%D1%85_by_ROCKET_f3ibki.jpg\",\n        cover: \"https://res.cloudinary.com/dynqvvscs/image/upload/v1748903650/Cover_of_%D0%9C%D1%8B%D1%81%D0%BB%D0%B8_-_%D0%A7%D0%B8%D1%82%D0%B0%D1%8E_%D0%BE_%D0%B4%D1%80%D0%B0%D0%B3%D0%B0%D1%85_by_ROCKET_f3ibki.jpg\"\n    },\n    {\n        title: \"Дежавю\",\n        artist: \"JUGHEAD\",\n        album: \"Hurt+Unlocked\",\n        src: \"https://res.cloudinary.com/dynqvvscs/video/upload/v1748903841/SpotiDownloader.com_-_%D0%94%D0%B5%D0%B6%D0%B0%D0%B2%D1%8E_-_JUGHEAD_fvseeq.mp3\",\n        cover: \"https://res.cloudinary.com/dynqvvscs/image/upload/v1748903648/Cover_of_%D0%94%D0%B5%D0%B6%D0%B0%D0%B2%D1%8E_by_JUGHEAD_cwqw2a.jpg\"\n    },\n    {\n        title: \"Знаю\",\n        artist: \"Полка\",\n        album: \"Знаю\",\n        src: \"https://res.cloudinary.com/dynqvvscs/video/upload/v1748903842/SpotiDownloader.com_-_%D0%97%D0%BD%D0%B0%D1%8E_-_%D0%9F%D0%BE%D0%BB%D0%BA%D0%B0_lbu9dk.mp3\",\n        cover: \"https://res.cloudinary.com/dynqvvscs/image/upload/v1748903648/Cover_of_%D0%97%D0%BD%D0%B0%D1%8E_by_%D0%9F%D0%BE%D0%BB%D0%BA%D0%B0_icozqj.jpg\"\n    },\n    {\n        title: \"When I Was Broke\",\n        artist: \"Future\",\n        album: \"FUTURE\",\n        src: \"https://res.cloudinary.com/dynqvvscs/video/upload/v1748903841/SpotiDownloader.com_-_When_I_Was_Broke_-_Future_dncai3.mp3\",\n        cover: \"assets/images/GET UP.jpg\"\n    },\n    {\n        title: \"Unfair\",\n        artist: \"ARTMS\",\n        album: \"<DALL>\",\n        src: \"https://res.cloudinary.com/dynqvvscs/video/upload/v1748903839/SpotiDownloader.com_-_Unf_Air_-_ARTMS_l7yyi9.mp3\",\n        cover: \"https://res.cloudinary.com/dynqvvscs/image/upload/v1748903645/Cover_of_Unf_Air_by_ARTMS_igthkr.jpg\"\n    },\n    {\n        title: \"Summers Over Interlude\",\n        artist: \"Drake\",\n        album: \"Views\",\n        src: \"https://res.cloudinary.com/dynqvvscs/video/upload/v1748903836/SpotiDownloader.com_-_Summers_Over_Interlude_-_Drake_arpo8h.mp3\",\n        cover: \"https://res.cloudinary.com/dynqvvscs/image/upload/v1748903642/Cover_of_Summers_Over_Interlude_by_Drake_Majid_Jordan_snpwl4.jpg\"\n    },\n    {\n        title: \"WE NEED ALL DA VIBES\",\n        artist: \"Playboi Carti\",\n        album: \"MUSIC\",\n        src: \"https://res.cloudinary.com/dynqvvscs/video/upload/v1748903840/SpotiDownloader.com_-_WE_NEED_ALL_DA_VIBES_with_Young_Thug_Ty_Dolla_ign_-_Playboi_Carti_cwor2k.mp3\",\n        cover: \"https://res.cloudinary.com/dynqvvscs/image/upload/v1748822528/MUSIC_kyv7kl.jpg\"\n    },\n    {\n        title: \"Two Thousand Nineteen\",\n        artist: \"FRIENDLY THUG 52 NGG\",\n        album: \"Cruiser Auror\",\n        src: \"https://res.cloudinary.com/dynqvvscs/video/upload/v1748903836/SpotiDownloader.com_-_Two_Thousand_Nineteen_-_FRIENDLY_THUG_52_NGG_llkb6b.mp3\",\n        cover: \"https://res.cloudinary.com/dynqvvscs/image/upload/v1748903642/Cover_of_Two_Thousand_Nineteen_by_FRIENDLY_THUG_52_NGG_gitd6e.jpg\"\n    },\n    {\n        title: \"TWIN TRIM\",\n        artist: \"Playboi Carti\",\n        album: \"MUSIC\",\n        src: \"https://res.cloudinary.com/dynqvvscs/video/upload/v1748903837/SpotiDownloader.com_-_TWIN_TRIM_-_Playboi_Carti_y00000.mp3\",\n        cover: \"https://res.cloudinary.com/dynqvvscs/image/upload/v1748822528/MUSIC_kyv7kl.jpg.jpg\"\n    },\n    {\n        title: \"SO FREE\",\n        artist: \"Lancey Foux\",\n        album: \"FRIEND OR FOUX\",\n        src: \"https://res.cloudinary.com/dynqvvscs/video/upload/v1748903835/SpotiDownloader.com_-_SO_FREE_-_Lancey_Foux_bzkawc.mp3\",\n        cover: \"https://res.cloudinary.com/dynqvvscs/image/upload/v1748903639/Cover_of_SO_FREE_by_Lancey_Foux_vyumyc.jpg\"\n    },\n    {\n        title: \"skate depot\",\n        artist: \"Channel Tres\",\n        album: \"i can't go outside\",\n        src: \"https://res.cloudinary.com/dynqvvscs/image/upload/v1748903638/Cover_of_skate_depot_by_Channel_Tres_uzbgfn.jpg\",\n        cover: \"https://res.cloudinary.com/dynqvvscs/video/upload/v1748903832/SpotiDownloader.com_-_skate_depot_-_Channel_Tres_kajqvj.mp3\"\n    },\n    {\n        title: \"Sparkle\",\n        artist: \"ARTMS\",\n        album: \"<DALL>\",\n        src: \"https://res.cloudinary.com/dynqvvscs/video/upload/v1748903837/SpotiDownloader.com_-_Sparkle_-_ARTMS_hrm6zj.mp3\",\n        cover: \"https://res.cloudinary.com/dynqvvscs/image/upload/v1748903645/Cover_of_Unf_Air_by_ARTMS_igthkr.jpg\"\n    },\n    {\n        title: \"RiRi\",\n        artist: \"Young Thug\",\n        album: \"JEFFERY\",\n        src: \"https://res.cloudinary.com/dynqvvscs/video/upload/v1748903832/SpotiDownloader.com_-_RiRi_-_Young_Thug_ovsb6p.mp3\",\n        cover: \"https://res.cloudinary.com/dynqvvscs/image/upload/v1748903633/Cover_of_RiRi_by_Young_Thug_pnqcmd.jpg\"\n    },\n    {\n        title: \"Scell\\xe9 part.2\",\n        artist: \"Freeze corleone & ASHE 22\",\n        album: \"LMF\",\n        src: \"https://res.cloudinary.com/dynqvvscs/video/upload/v1748903831/SpotiDownloader.com_-_Scell%C3%A9_part.2_-_Freeze_corleone_qmtg1v.mp3\",\n        cover: \"https://res.cloudinary.com/dynqvvscs/image/upload/v1748903637/Cover_of_Scell%C3%A9_part.2_by_Freeze_corleone_ASHE_22_xrqjdn.jpg\"\n    },\n    {\n        title: \"Silhouette\",\n        artist: \"Len & Fimiguerrero\",\n        album: \"CONGLOMERATE\",\n        src: \"https://res.cloudinary.com/dynqvvscs/video/upload/v1748903831/SpotiDownloader.com_-_Silhouette_-_Len_emghex.mp3\",\n        cover: \"https://res.cloudinary.com/dynqvvscs/image/upload/v1748903637/Cover_of_Silhouette_by_Len_Fimiguerrero_nd8awh.jpg\"\n    },\n    {\n        title: \"RATHER LIE\",\n        artist: \"Playboi Carti & The Weeknd\",\n        album: \"MUSIC\",\n        src: \"https://res.cloudinary.com/dynqvvscs/video/upload/v1748903832/SpotiDownloader.com_-_RATHER_LIE_with_The_Weeknd_-_Playboi_Carti_c0sriw.mp3\",\n        cover: \"https://res.cloudinary.com/dynqvvscs/image/upload/v1748822528/MUSIC_kyv7kl.jpg\"\n    },\n    {\n        title: \"Provider\",\n        artist: \"Frank Ocean\",\n        album: \"Provider\",\n        src: \"https://res.cloudinary.com/dynqvvscs/video/upload/v1748903828/SpotiDownloader.com_-_Provider_-_Frank_Ocean_hwbkvs.mp3\",\n        cover: \"https://res.cloudinary.com/dynqvvscs/image/upload/v1748903633/Cover_of_Provider_by_Frank_Ocean_q9k9jl.jpg\"\n    },\n    {\n        title: \"Please Tell Me\",\n        artist: \"Future\",\n        album: \"SAVE ME\",\n        src: \"https://res.cloudinary.com/dynqvvscs/video/upload/v1748903826/SpotiDownloader.com_-_Please_Tell_Me_-_Future_un7sug.mp3\",\n        cover: \"https://res.cloudinary.com/dynqvvscs/image/upload/v1748903632/Cover_of_Please_Tell_Me_by_Future_lgkvoc.jpg\"\n    },\n    {\n        title: \"OLIVINE\",\n        artist: \"Freeze corleone & ASHE 22\",\n        album: \"RIYAD SADIO\",\n        src: \"https://res.cloudinary.com/dynqvvscs/video/upload/v1748903826/SpotiDownloader.com_-_OLIVINE_-_Freeze_corleone_ok5hyw.mp3\",\n        cover: \"https://res.cloudinary.com/dynqvvscs/image/upload/v1748903629/Cover_of_OLIVINE_by_Freeze_corleone_ASHE_22_mt1u3r.jpg\"\n    },\n    {\n        title: \"paper chase\",\n        artist: \"kwes e\",\n        album: \"yup\",\n        src: \"https://res.cloudinary.com/dynqvvscs/video/upload/v1748903825/SpotiDownloader.com_-_paper_chase_-_kwes_e_yhohip.mp3\",\n        cover: \"https://res.cloudinary.com/dynqvvscs/image/upload/v1748903629/Cover_of_OLIVINE_by_Freeze_corleone_ASHE_22_mt1u3r.jpg\"\n    },\n    {\n        title: \"PROJECTS\",\n        artist: \"unki\",\n        album: \"PROJECTS\",\n        src: \"https://res.cloudinary.com/dynqvvscs/video/upload/v1748903825/SpotiDownloader.com_-_PROJECTS_-_unki_ygdbln.mp3\",\n        cover: \"https://res.cloudinary.com/dynqvvscs/image/upload/v1748903632/Cover_of_PROJECTS_by_unki_jtlxec.jpg\"\n    },\n    {\n        title: \"Loft Music\",\n        artist: \"The Weeknd\",\n        album: \"House Of Balloons (Original)\",\n        src: \"https://res.cloudinary.com/dynqvvscs/video/upload/v1748903823/SpotiDownloader.com_-_Loft_Music_-_The_Weeknd_s3v3jv.mp3\",\n        cover: \"https://res.cloudinary.com/dynqvvscs/image/upload/v1748903624/Cover_of_Loft_Music_by_The_Weeknd_kqrbkt.jpg\"\n    },\n    {\n        title: \"Palaces\",\n        artist: \"EsDeeKid & Rico Ace\",\n        album: \"Palaces\",\n        src: \"https://res.cloudinary.com/dynqvvscs/video/upload/v1748903821/SpotiDownloader.com_-_Palaces_-_EsDeeKid_cpa6ku.mp3\",\n        cover: \"IMG\"\n    },\n    {\n        title: \"LUV\",\n        artist: \"ROCKET\",\n        album: \"Tsukuyomi Dream\",\n        src: \"https://res.cloudinary.com/dynqvvscs/video/upload/v1748903820/SpotiDownloader.com_-_LUV_-_ROCKET_hew2dc.mp3\",\n        cover: \"https://res.cloudinary.com/dynqvvscs/image/upload/v1748903626/Cover_of_LUV_by_ROCKET_eu3nwf.jpg\"\n    },\n    {\n        title: \"LOUVRE\",\n        artist: \"Destroy Lonely\",\n        album: \"NS+(ULTRA)\",\n        src: \"https://res.cloudinary.com/dynqvvscs/video/upload/v1748903819/SpotiDownloader.com_-_LOUVRE_-_Destroy_Lonely_ua3zkz.mp3\",\n        cover: \"https://res.cloudinary.com/dynqvvscs/image/upload/v1748903625/Cover_of_LOUVRE_by_Destroy_Lonely_k4akjy.jpg\"\n    },\n    {\n        title: \"Keep Your Faith To The Sky\",\n        artist: \"Willie Scott\",\n        album: \"Thank You Lord for One More Day\",\n        src: \"https://res.cloudinary.com/dynqvvscs/video/upload/v1748903818/SpotiDownloader.com_-_Keep_Your_Faith_to_the_Sky_-_Willie_Scott_yd682k.mp3\",\n        cover: \"https://res.cloudinary.com/dynqvvscs/image/upload/v1748903622/Cover_of_Keep_Your_Faith_to_the_Sky_by_Willie_Scott_The_Birmingham_Spirituals_m7pqkv.jpg\"\n    },\n    {\n        title: \"MOSQUITO P2\",\n        artist: \"SURF GANG\",\n        album: \"SGV1\",\n        src: \"https://res.cloudinary.com/dynqvvscs/video/upload/v1748903818/SpotiDownloader.com_-_Mosquito_P2_-_SURF_GANG_y5eiln.mp3\",\n        cover: \"https://res.cloudinary.com/dynqvvscs/image/upload/v1748903628/Cover_of_Mosquito_P2_by_SURF_GANG_bnsykb.jpg\"\n    },\n    {\n        title: \"mileys riddim\",\n        artist: \"Jim Legxacy\",\n        album: \"homeless n*gga pop music\",\n        src: \"https://res.cloudinary.com/dynqvvscs/video/upload/v1748903818/SpotiDownloader.com_-_mileys_riddim_-_Jim_Legxacy_gr4pne.mp3\",\n        cover: \"https://res.cloudinary.com/dynqvvscs/image/upload/v1748903627/Cover_of_mileys_riddim_by_Jim_Legxacy_ye2r5f.jpg\"\n    },\n    {\n        title: \"KONAMI (2bigos)\",\n        artist: \"COEURCO\",\n        album: \"UNLIMITED ONLINE EXHIBITION\",\n        src: \"https://res.cloudinary.com/dynqvvscs/video/upload/v1748903814/SpotiDownloader.com_-_KONAMI_2bigos_-_COEURCO_oqze1n.mp3\",\n        cover: \"https://res.cloudinary.com/dynqvvscs/image/upload/v1748903623/Cover_of_KONAMI_2bigos_by_COEURCO_ghc8hn.jpg\"\n    },\n    {\n        title: \"Jumbotron Shit Poppin\",\n        artist: \"Drake\",\n        album: \"Her Loss\",\n        src: \"https://res.cloudinary.com/dynqvvscs/video/upload/v1748903813/SpotiDownloader.com_-_Jumbotron_Shit_Poppin_-_Drake_toclrz.mp3\",\n        cover: \"https://res.cloudinary.com/dynqvvscs/image/upload/v1748903620/Cover_of_Jumbotron_Shit_Poppin_by_Drake_k4a3gf.jpg\"\n    },\n    {\n        title: \"Fashion Show\",\n        artist: \"Kwengface & Lancey Foux\",\n        album: \"Fashion Show\",\n        src: \"https://res.cloudinary.com/dynqvvscs/video/upload/v1748903813/SpotiDownloader.com_-_Fashion_Show_-_Kwengface_oxm6z3.mp3\",\n        cover: \"https://res.cloudinary.com/dynqvvscs/image/upload/v1748903619/Cover_of_Fashion_Show_by_Kwengface_Lancey_Foux_miwnzo.jpg\"\n    },\n    {\n        title: \"How Sweet\",\n        artist: \"New Jeans\",\n        album: \"How Sweet\",\n        src: \"https://res.cloudinary.com/dynqvvscs/video/upload/v1748903813/SpotiDownloader.com_-_How_Sweet_-_NewJeans_b7cxtn.mp3\",\n        cover: \"https://res.cloudinary.com/dynqvvscs/image/upload/v1748903619/Cover_of_How_Sweet_by_NewJeans_hgxsni.jpg\"\n    },\n    {\n        title: \"I GOT U\",\n        artist: \"Toxi$\",\n        album: \"I GOT U\",\n        src: \"https://res.cloudinary.com/dynqvvscs/video/upload/v1748903812/SpotiDownloader.com_-_I_GOT_U_-_Toxi_vb9593.mp3\",\n        cover: \"https://res.cloudinary.com/dynqvvscs/image/upload/v1748903620/Cover_of_I_GOT_U_by_Toxi_jpigst.jpg\"\n    },\n    {\n        title: \"Dreams Money Can Buy\",\n        artist: \"Drake\",\n        album: \"Care Package\",\n        src: \"https://res.cloudinary.com/dynqvvscs/video/upload/v1748903809/SpotiDownloader.com_-_Dreams_Money_Can_Buy_-_Drake_qsllaj.mp3\",\n        cover: \"https://res.cloudinary.com/dynqvvscs/image/upload/v1748903619/Cover_of_Dreams_Money_Can_Buy_by_Drake_s1ng6q.jpg\"\n    },\n    {\n        title: \"Fakin'\",\n        artist: \"JUE\",\n        album: \"6 Shots\",\n        src: \"https://res.cloudinary.com/dynqvvscs/video/upload/v1748903807/SpotiDownloader.com_-_Fakin_-_JUE_ilpful.mp3\",\n        cover: \"https://res.cloudinary.com/dynqvvscs/image/upload/v1748903622/Cover_of_Kin_by_Kevin_Abstract_ijksuw.jpg\"\n    },\n    {\n        title: \"Dopamine - GISELLE Solo\",\n        artist: \"aespa\",\n        album: \"SYNK: PARALLEL LINE - Special Digital Single\",\n        src: \"https://res.cloudinary.com/dynqvvscs/video/upload/v1748903806/SpotiDownloader.com_-_Dopamine_-_GISELLE_Solo_-_aespa_kqs4lp.mp3\",\n        cover: \"https://res.cloudinary.com/dynqvvscs/image/upload/v1748903618/Cover_of_Dopamine_-_GISELLE_Solo_by_aespa_aqedro.jpg\"\n    },\n    {\n        title: \"Did You See\",\n        artist: \"J Hus\",\n        album: \"Common Sense\",\n        src: \"https://res.cloudinary.com/dynqvvscs/video/upload/v1748903806/SpotiDownloader.com_-_Did_You_See_-_J_Hus_uoqm30.mp3\",\n        cover: \"https://res.cloudinary.com/dynqvvscs/image/upload/v1748903618/Cover_of_Did_You_See_by_J_Hus_fs6xuv.jpg\"\n    },\n    {\n        title: \"down\",\n        artist: \"Effie\",\n        album: \"E\",\n        src: \"https://res.cloudinary.com/dynqvvscs/video/upload/v1748903805/SpotiDownloader.com_-_down_-_Effie_zzex5m.mp3\",\n        cover: \"https://res.cloudinary.com/dynqvvscs/image/upload/v1748903618/Cover_of_down_by_Effie_vflzc2.jpg\"\n    },\n    {\n        title: \"Desir\\xe9e\",\n        artist: \"Blood Orange\",\n        album: \"Freetown Sound\",\n        src: \"https://res.cloudinary.com/dynqvvscs/video/upload/v1748903805/SpotiDownloader.com_-_Desir%C3%A9e_-_Blood_Orange_kid6ff.mp3\",\n        cover: \"https://res.cloudinary.com/dynqvvscs/image/upload/v1748903516/Cover_of_Desir%C3%A9e_by_Blood_Orange_d54uik.jpg\"\n    },\n    {\n        title: \"Diamonds\",\n        artist: \"YT & Fimiguerrero\",\n        album: \"OI!\",\n        src: \"https://res.cloudinary.com/dynqvvscs/video/upload/v1748903802/SpotiDownloader.com_-_Diamonds_-_YT_mg5hlh.mp3\",\n        cover: \"https://res.cloudinary.com/dynqvvscs/image/upload/v1748903519/Cover_of_Diamonds_by_YT_Fimiguerrero_cubotq.jpg\"\n    },\n    {\n        title: \"Dark Souls\",\n        artist: \"FENDIGLOCK\",\n        album: \"NO TUNE\",\n        src: \"https://res.cloudinary.com/dynqvvscs/video/upload/v1748903801/SpotiDownloader.com_-_Dark_Souls_-_FENDIGLOCK_irg9br.mp3\",\n        cover: \"https://res.cloudinary.com/dynqvvscs/image/upload/v1748903501/Cover_of_Dark_Souls_by_FENDIGLOCK_ixxj58.jpg\"\n    },\n    {\n        title: \"Adore\",\n        artist: \"Prince\",\n        album: \"Sign 'O' The Times\",\n        src: \"https://res.cloudinary.com/dynqvvscs/video/upload/v1748903800/SpotiDownloader.com_-_Adore_-_Prince_msbjep.mp3\",\n        cover: \"https://res.cloudinary.com/dynqvvscs/image/upload/v1748903493/Cover_of_Adore_by_Prince_ueywnu.jpg\"\n    },\n    {\n        title: \"BIPOLAR BAG\",\n        artist: \"Lancey Foux\",\n        album: \"FIRST DEGREE\",\n        src: \"https://res.cloudinary.com/dynqvvscs/video/upload/v1748903799/SpotiDownloader.com_-_BIPOLAR_BAG_-_Lancey_Foux_ytpbab.mp3\",\n        cover: \"https://res.cloudinary.com/dynqvvscs/image/upload/v1748903500/Cover_of_BIPOLAR_BAG_by_Lancey_Foux_fzttmn.jpg\"\n    },\n    {\n        title: \"Bad - Remix\",\n        artist: \"Wale & Rihanna\",\n        album: \"The Gifted\",\n        src: \"https://res.cloudinary.com/dynqvvscs/video/upload/v1748903799/SpotiDownloader.com_-_Bad_feat._Rihanna_-_Remix_-_Wale_r8nnhq.mp3\",\n        cover: \"https://res.cloudinary.com/dynqvvscs/image/upload/v1748903499/Cover_of_Bad_feat._Rihanna_-_Remix_by_Wale_Rihanna_igtdaj.jpg\"\n    },\n    {\n        title: \"CSO\",\n        artist: \"ROCKET\",\n        album: \"Ego Trippin'\",\n        src: \"https://res.cloudinary.com/dynqvvscs/video/upload/v1748903798/SpotiDownloader.com_-_CSO_-_ROCKET_k9hd9x.mp3\",\n        cover: \"https://res.cloudinary.com/dynqvvscs/image/upload/v1748903501/Cover_of_CSO_by_ROCKET_gyj4gc.jpg\"\n    },\n    {\n        title: \"b*tches and money go\",\n        artist: \"Baby Cute\",\n        album: \"SENSATION! A Cute Chaotic Trail\",\n        src: \"https://res.cloudinary.com/dynqvvscs/video/upload/v1748903797/SpotiDownloader.com_-_b_tches_And_Money_Go_-_Baby_Cute_xn3rol.mp3\",\n        cover: \"https://res.cloudinary.com/dynqvvscs/image/upload/v1748903497/Cover_of_b_tches_And_Money_Go_by_Baby_Cute_t3ybx0.jpg\"\n    },\n    {\n        title: \"B... Arp Forever V3 (109.613 BPM)\",\n        artist: \"Vegyn\",\n        album: \"Text While Driving If You Want To Meet God!\",\n        src: \"https://res.cloudinary.com/dynqvvscs/video/upload/v1748903793/SpotiDownloader.com_-_B..._Arp_Forever_V3_109.613_BPM_-_Vegyn_mounwj.mp3\",\n        cover: \"https://res.cloudinary.com/dynqvvscs/image/upload/v1748903497/Cover_of_B..._Arp_Forever_V3_109.613_BPM_by_Vegyn_hogvyo.jpg\"\n    },\n    {\n        title: \"Apollo\",\n        artist: \"Slimesito\",\n        album: \"Vida BraZy\",\n        src: \"https://res.cloudinary.com/dynqvvscs/video/upload/v1748903792/SpotiDownloader.com_-_Apollo_-_Slimesito_zsdidr.mp3\",\n        cover: \"https://res.cloudinary.com/dynqvvscs/image/upload/v1748903495/Cover_of_Apollo_by_Slimesito_rwpfs1.jpg\"\n    },\n    {\n        title: \"Amen\",\n        artist: \"Drake & Teezo Touchdown\",\n        album: \"For All The Dogs\",\n        src: \"https://res.cloudinary.com/dynqvvscs/video/upload/v1748903791/SpotiDownloader.com_-_Amen_feat._Teezo_Touchdown_-_Drake_j3mt8n.mp3\",\n        cover: \"https://res.cloudinary.com/dynqvvscs/image/upload/v1748903494/Cover_of_Amen_feat._Teezo_Touchdown_by_Drake_Teezo_Touchdown_lraccq.jpg\"\n    },\n    {\n        title: \"01'beigecamry\",\n        artist: \"Sideshow\",\n        album: \"Farley\",\n        src: \"https://res.cloudinary.com/dynqvvscs/video/upload/v1748903789/SpotiDownloader.com_-_01_beigecamry_-_Sideshow_lr6sd9.mp3\",\n        cover: \"https://res.cloudinary.com/dynqvvscs/image/upload/v1748903491/Cover_of_01_beigecamry_by_Sideshow_spt1ff.jpg\"\n    },\n    {\n        title: \"Легендарити\",\n        artist: \"OG Buda & FRIENDLY THUG 52 NGG\",\n        album: \"POX VAW\\xcb\",\n        src: \"https://res.cloudinary.com/dynqvvscs/video/upload/v1748903789/SpotiDownloader.com_-_%D0%9B%D0%B5%D0%B3%D0%B5%D0%BD%D0%B4%D0%B0%D1%80%D0%B8%D1%82%D0%B8_-_OG_Buda_sptud1.mp3\",\n        cover: \"https://res.cloudinary.com/dynqvvscs/image/upload/v1748903490/Cover_of_%D0%9B%D0%B5%D0%B3%D0%B5%D0%BD%D0%B4%D0%B0%D1%80%D0%B8%D1%82%D0%B8_by_OG_Buda_FRIENDLY_THUG_52_NGG_n5nzad.jpg\"\n    },\n    {\n        title: \"HEIL HITLER\",\n        artist: \"Ye\",\n        album: \"HEIL HITLER\",\n        src: \"https://res.cloudinary.com/dynqvvscs/video/upload/v1749038096/SaveTwitter.Net_qMZdtjELoPY3TAHu__540p_oymnbc.mp3\",\n        cover: \"https://res.cloudinary.com/dynqvvscs/image/upload/v1749038094/Cover_of_HALLELUJAH_by_Ye_pmprp6.jpg\"\n    },\n    {\n        title: \"ТопБой\",\n        artist: \"Guram D\",\n        album: \"Только на старте\",\n        src: \"https://res.cloudinary.com/dynqvvscs/video/upload/v1748903788/SpotiDownloader.com_-_%D0%A2%D0%BE%D0%BF%D0%91%D0%BE%D0%B9_-_Guram_D_veu0u2.mp3\",\n        cover: \"https://res.cloudinary.com/dynqvvscs/image/upload/v1748903490/Cover_of_%D0%A2%D0%BE%D0%BF%D0%91%D0%BE%D0%B9_by_Guram_D_qoaqpn.jpg\"\n    },\n    {\n        title: \"Для Тебя (Пусто)\",\n        artist: \"OG Buda\",\n        album: \"Скучаю, Но Работаю\",\n        src: \"https://res.cloudinary.com/dynqvvscs/video/upload/v1748903788/SpotiDownloader.com_-_%D0%94%D0%BB%D1%8F_%D0%A2%D0%B5%D0%B1%D1%8F_%D0%9F%D1%83%D1%81%D1%82%D0%BE_-_OG_Buda_mwccgy.mp3\",\n        cover: \"https://res.cloudinary.com/dynqvvscs/image/upload/v1748903487/Cover_of_%D0%94%D0%BB%D1%8F_%D0%A2%D0%B5%D0%B1%D1%8F_%D0%9F%D1%83%D1%81%D1%82%D0%BE_by_OG_Buda_ixsayk.jpg\"\n    },\n    {\n        title: \"Just How I'm Feelin'\",\n        artist: \"Lil Yachty & Lil Baby\",\n        album: \"Lil Boat 3.5\",\n        src: \"https://res.cloudinary.com/dynqvvscs/video/upload/v1748903788/SpotiDownloader.com_-_Just_How_I_m_Feelin_feat._Lil_Baby_-_Lil_Yachty_kju60g.mp3\",\n        cover: \"https://res.cloudinary.com/dynqvvscs/image/upload/v1748903485/Cover_of_Just_How_I_m_Feelin_feat._Lil_Baby_by_Lil_Yachty_Lil_Baby_dl62dh.jpg\"\n    },\n    {\n        title: \"ROSTER\",\n        artist: \"5EB & YT\",\n        album: \"##MOTIONMUZIK\",\n        src: \"https://res.cloudinary.com/dynqvvscs/video/upload/v1748903787/SpotiDownloader.com_-_ROSTER_-_5EB_zlguuz.mp3\",\n        cover: \"https://res.cloudinary.com/dynqvvscs/image/upload/v1748903487/Cover_of_ROSTER_by_5EB_YT_x9kdpm.jpg\"\n    },\n    {\n        title: \"XY\",\n        artist: \"Feng\",\n        album: \"What The Feng\",\n        src: \"https://res.cloudinary.com/dynqvvscs/video/upload/v1748903786/SpotiDownloader.com_-_XY_-_Feng_xdhpdx.mp3\",\n        cover: \"https://res.cloudinary.com/dynqvvscs/image/upload/v1748903486/Cover_of_XY_by_Feng_lnpitd.jpg\"\n    },\n    {\n        title: \"Групи\",\n        artist: \"Платина & OG Buda\",\n        album: \"Сладких снов\",\n        src: \"https://res.cloudinary.com/dynqvvscs/video/upload/v1748903784/SpotiDownloader.com_-_%D0%93%D1%80%D1%83%D0%BF%D0%B8_-_%D0%9F%D0%BB%D0%B0%D1%82%D0%B8%D0%BD%D0%B0_yfckeb.mp3\",\n        cover: \"https://res.cloudinary.com/dynqvvscs/image/upload/v1748903486/Cover_of_%D0%93%D1%80%D1%83%D0%BF%D0%B8_by_%D0%9F%D0%BB%D0%B0%D1%82%D0%B8%D0%BD%D0%B0_OG_Buda_oerofj.jpg\"\n    },\n    {\n        title: \"Caramel\",\n        artist: \"PHARAOH\",\n        album: \"Caramel\",\n        src: \"https://res.cloudinary.com/dynqvvscs/video/upload/v1748903784/SpotiDownloader.com_-_Caramel_-_PHARAOH_iy1ujn.mp3\",\n        cover: \"https://res.cloudinary.com/dynqvvscs/image/upload/v1748903485/Cover_of_Caramel_by_PHARAOH_ptdmgm.jpg\"\n    },\n    {\n        title: \"AMMO\",\n        artist: \"FRIENDLY THUG 52 NGG\",\n        album: \"AMMO\",\n        src: \"https://res.cloudinary.com/dynqvvscs/video/upload/v1748903782/SpotiDownloader.com_-_AMMO_-_FRIENDLY_THUG_52_NGG_at7dgl.mp3\",\n        cover: \"https://res.cloudinary.com/dynqvvscs/image/upload/v1748903485/Cover_of_AMMO_by_FRIENDLY_THUG_52_NGG_mozbz8.jpg\"\n    },\n    {\n        title: \"No Coco Senior Please\",\n        artist: \"FRIENDLY THUG 52 NGG\",\n        album: \"Graf Monte-Cristo / Most Valuable Pirate\",\n        src: \"https://res.cloudinary.com/dynqvvscs/video/upload/v1748903780/SpotiDownloader.com_-_No_Coco_Senior_Please_-_FRIENDLY_THUG_52_NGG_cxl4fm.mp3\",\n        cover: \"https://res.cloudinary.com/dynqvvscs/image/upload/v1748903486/Cover_of_No_Coco_Senior_Please_by_FRIENDLY_THUG_52_NGG_dehie3.jpg\"\n    },\n    {\n        title: \"Slide On Me\",\n        artist: \"Frank Ocean & Young Thug\",\n        album: \"ENDLESS\",\n        src: \"https://res.cloudinary.com/dynqvvscs/video/upload/v1748823972/SLIDE_ON_ME_avfsqq.mp3\",\n        cover: \"IMG\"\n    },\n    {\n        title: \"Rushes To\",\n        artist: \"Frank Ocean\",\n        album: \"ENDLESS\",\n        src: \"https://res.cloudinary.com/dynqvvscs/video/upload/v1748823967/Rushes_To_xpmm4e.m4a\",\n        cover: \"IMG\"\n    },\n    {\n        title: \"PLAY THIS\",\n        artist: \"Playboi Carti\",\n        album: \"PLAY THIS\",\n        src: \"https://res.cloudinary.com/dynqvvscs/video/upload/v1748823965/PLAY_THIS_ih1sn1.wav\",\n        cover: \"https://res.cloudinary.com/dynqvvscs/image/upload/v1748822530/PLAY_THIS_bk6tpf.jpg\"\n    },\n    {\n        title: \"Abu Dhabi Baбy\",\n        artist: \"Платина, OG BUDA & MAYOT\",\n        album: \"Sosa Muzik\",\n        src: \"https://res.cloudinary.com/dynqvvscs/video/upload/v1749397404/SpotiDownloader.com_-_Abu_Dhabi_Ba6y_-_%D0%9F%D0%BB%D0%B0%D1%82%D0%B8%D0%BD%D0%B0_ibombl.mp3\",\n        cover: \"https://res.cloudinary.com/dynqvvscs/image/upload/v1749397370/Cover_of_Abu_Dhabi_Ba6y_by_%D0%9F%D0%BB%D0%B0%D1%82%D0%B8%D0%BD%D0%B0_OG_Buda_MAYOT_tegb1s.jpg\"\n    },\n    {\n        title: \"Блэсс\",\n        artist: \"OG Buda & YUNGWAY\",\n        album: \"Скучаю, Но Работаю\",\n        src: \"https://res.cloudinary.com/dynqvvscs/video/upload/v1749397429/SpotiDownloader.com_-_%D0%91%D0%BB%D1%8D%D1%81%D1%81_-_OG_Buda_mpti3n.mp3\",\n        cover: \"https://res.cloudinary.com/dynqvvscs/image/upload/v1749397377/Cover_of_%D0%91%D0%BB%D1%8D%D1%81%D1%81_by_OG_Buda_YUNGWAY_pd831f.jpg\"\n    },\n    {\n        title: \"Programme Chanel\",\n        artist: \"Saint\\xe9\",\n        album: \"Programme Chanel\",\n        src: \"https://res.cloudinary.com/dynqvvscs/video/upload/v1749397428/SpotiDownloader.com_-_Programme_Chanel_-_Saint%C3%A9_fmmfje.mp3\",\n        cover: \"https://res.cloudinary.com/dynqvvscs/image/upload/v1749397373/Cover_of_Programme_Chanel_by_Saint%C3%A9_lp0pfx.jpg\"\n    },\n    {\n        title: \"Rap Shit\",\n        artist: \"City Girls\",\n        album: \"PERIOD\",\n        src: \"https://res.cloudinary.com/dynqvvscs/video/upload/v1749397424/SpotiDownloader.com_-_Rap_Shit_-_City_Girls_vrrqrt.mp3\",\n        cover: \"https://res.cloudinary.com/dynqvvscs/image/upload/v1749397374/Cover_of_Rap_Shit_by_City_Girls_zdvulq.jpg\"\n    },\n    {\n        title: \"WW3\",\n        artist: \"Ye\",\n        album: \"WW3\",\n        src: \"https://res.cloudinary.com/dynqvvscs/video/upload/v1749397423/SpotiDownloader.com_-_WW3_-_Ye_svo8hb.mp3\",\n        cover: \"https://res.cloudinary.com/dynqvvscs/image/upload/v1749397376/Cover_of_WW3_by_Ye_dc7o3i.jpg\"\n    },\n    {\n        title: \"take your time\",\n        artist: \"Channel Tres & Tinashe\",\n        album: \"i can't go outside\",\n        src: \"https://res.cloudinary.com/dynqvvscs/video/upload/v1749397421/SpotiDownloader.com_-_take_your_time_feat._Tinashe_-_Channel_Tres_jljuvj.mp3\",\n        cover: \"https://res.cloudinary.com/dynqvvscs/image/upload/v1749397375/Cover_of_take_your_time_feat._Tinashe_by_Channel_Tres_Tinashe_affu2a.jpg\"\n    },\n    {\n        title: \"My Mind\",\n        artist: \"NAV\",\n        album: \"NAV\",\n        src: \"https://res.cloudinary.com/dynqvvscs/video/upload/v1749397409/SpotiDownloader.com_-_My_Mind_-_NAV_fjsovk.mp3\",\n        cover: \"https://res.cloudinary.com/dynqvvscs/image/upload/v1749397373/Cover_of_My_Mind_by_NAV_hg4rcd.jpg\"\n    },\n    {\n        title: \"Music and Me\",\n        artist: \"Fakemink\",\n        album: \"Music and Me\",\n        src: \"https://res.cloudinary.com/dynqvvscs/video/upload/v1749397408/SpotiDownloader.com_-_Music_and_Me_-_fakemink_eynyso.mp3\",\n        cover: \"https://res.cloudinary.com/dynqvvscs/image/upload/v1749397371/Cover_of_Music_and_Me_by_fakemink_go5b2t.jpg\"\n    },\n    {\n        title: \"Hunnids\",\n        artist: \"Saint\\xe9\",\n        album: \"Local Mvp\",\n        src: \"https://res.cloudinary.com/dynqvvscs/video/upload/v1749397408/SpotiDownloader.com_-_Hunnids_-_Saint%C3%A9_avrfjc.mp3\",\n        cover: \"https://res.cloudinary.com/dynqvvscs/image/upload/v1749397371/Cover_of_Hunnids_by_Saint%C3%A9_coagxa.jpg\"\n    },\n    {\n        title: \"Envy Me\",\n        artist: \"Saint\\xe9\",\n        album: \"Envy Me\",\n        src: \"https://res.cloudinary.com/dynqvvscs/video/upload/v1749397406/SpotiDownloader.com_-_Envy_Me_-_Saint%C3%A9_zfziwg.mp3\",\n        cover: \"https://res.cloudinary.com/dynqvvscs/image/upload/v1749397370/Cover_of_Envy_Me_by_Saint%C3%A9_hedqwi.jpg\"\n    },\n    {\n        title: \"Good For It\",\n        artist: \"NAV\",\n        album: \"NAV\",\n        src: \"https://res.cloudinary.com/dynqvvscs/video/upload/v1749397400/SpotiDownloader.com_-_Good_For_It_-_NAV_bewou6.mp3\",\n        cover: \"https://res.cloudinary.com/dynqvvscs/image/upload/v1749397371/Cover_of_Good_For_It_by_NAV_kdliuh.jpg\"\n    },\n    {\n        title: \"NAVUZIMETRO#PT2\",\n        artist: \"NAV, Metro Boomin & Lil Uzi Vert\",\n        album: \"Perfect Timing\",\n        src: \"https://res.cloudinary.com/dynqvvscs/video/upload/v1749397939/SpotiDownloader.com_-_NAVUZIMETRO_PT2_-_NAV_w6vjdc.mp3\",\n        cover: \"https://res.cloudinary.com/dynqvvscs/image/upload/v1749397927/Cover_of_NAVUZIMETRO_PT2_by_NAV_Metro_Boomin_Lil_Uzi_Vert_vxmfrk.jpg\"\n    }\n];\nconst MusicPlayerContext = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_1__.createContext)(undefined);\nfunction MusicPlayerProvider(param) {\n    let { children } = param;\n    var _shuffledTracks_currentTrackIndex;\n    _s();\n    const [isPlaying, setIsPlaying] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false); // start paused by default\n    const [currentTrackIndex, setCurrentTrackIndex] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(0);\n    const [volume, setVolume] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(1);\n    const [shuffledTracks, setShuffledTracks] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]);\n    const audioRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    const [hasRestored, setHasRestored] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    // Fisher-Yates shuffle\n    const shuffleArray = (array)=>{\n        const newArray = [\n            ...array\n        ];\n        for(let i = newArray.length - 1; i > 0; i--){\n            const j = Math.floor(Math.random() * (i + 1));\n            [newArray[i], newArray[j]] = [\n                newArray[j],\n                newArray[i]\n            ];\n        }\n        return newArray;\n    };\n    // On mount, always shuffle the playlist and start from the first track\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        if (tracks.length > 0) {\n            setShuffledTracks(shuffleArray(tracks));\n            setCurrentTrackIndex(0);\n            setTimeout(()=>{\n                if (audioRef.current) {\n                    audioRef.current.currentTime = 0;\n                }\n                setHasRestored(true);\n            }, 0);\n        }\n    }, []);\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        if (audioRef.current) {\n            audioRef.current.volume = volume;\n        }\n    }, [\n        volume\n    ]);\n    const nextTrack = ()=>{\n        setCurrentTrackIndex((prev)=>(prev + 1) % shuffledTracks.length);\n        if (audioRef.current) {\n            audioRef.current.currentTime = 0;\n        }\n    };\n    // Ensure playback resumes after skipping if isPlaying is true\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        if (audioRef.current && isPlaying) {\n            audioRef.current.play().catch(()=>{});\n        }\n    }, [\n        currentTrackIndex,\n        isPlaying\n    ]);\n    const togglePlay = ()=>{\n        if (!audioRef.current) return;\n        if (isPlaying) {\n            audioRef.current.pause();\n            setIsPlaying(false);\n        } else {\n            audioRef.current.play().catch(()=>{}); // catch and ignore NotAllowedError\n            setIsPlaying(true);\n        }\n    };\n    const handleVolumeChange = (e)=>{\n        const newVolume = parseFloat(e.target.value);\n        setVolume(newVolume);\n        if (audioRef.current) {\n            audioRef.current.volume = newVolume;\n            if (newVolume > 0) {\n                audioRef.current.muted = false;\n            }\n        }\n    };\n    const volumeDown = ()=>{\n        const newVolume = Math.max(0, volume - 0.1);\n        setVolume(newVolume);\n        if (audioRef.current) {\n            audioRef.current.volume = newVolume;\n        }\n        if (newVolume === 0) {\n            audioRef.current.muted = true;\n        } else if (audioRef.current.muted) {\n            audioRef.current.muted = false;\n        }\n    };\n    const volumeUp = ()=>{\n        if (!audioRef.current) return;\n        audioRef.current.volume = 1;\n        audioRef.current.muted = false;\n        setVolume(1);\n    };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(MusicPlayerContext.Provider, {\n        value: {\n            isPlaying,\n            setIsPlaying,\n            currentTrackIndex,\n            setCurrentTrackIndex,\n            volume,\n            setVolume,\n            shuffledTracks,\n            nextTrack,\n            togglePlay,\n            handleVolumeChange,\n            volumeDown,\n            volumeUp,\n            audioRef\n        },\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"audio\", {\n                ref: audioRef,\n                src: (_shuffledTracks_currentTrackIndex = shuffledTracks[currentTrackIndex]) === null || _shuffledTracks_currentTrackIndex === void 0 ? void 0 : _shuffledTracks_currentTrackIndex.src,\n                onEnded: nextTrack,\n                preload: \"auto\",\n                style: {\n                    display: \"none\"\n                }\n            }, void 0, false, {\n                fileName: \"/Users/kdrama/Downloads/ALL WEBSITES/BACKUPS/THIRD ATTEMPT /app/contexts/MusicPlayerContext.tsx\",\n                lineNumber: 1385,\n                columnNumber: 7\n            }, this),\n            children\n        ]\n    }, void 0, true, {\n        fileName: \"/Users/kdrama/Downloads/ALL WEBSITES/BACKUPS/THIRD ATTEMPT /app/contexts/MusicPlayerContext.tsx\",\n        lineNumber: 1369,\n        columnNumber: 5\n    }, this);\n}\n_s(MusicPlayerProvider, \"vrQvXn37t+XPq2PaBHlisACUgRM=\");\n_c = MusicPlayerProvider;\nfunction useMusicPlayer() {\n    _s1();\n    const ctx = (0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)(MusicPlayerContext);\n    if (!ctx) throw new Error(\"useMusicPlayer must be used within a MusicPlayerProvider\");\n    return ctx;\n}\n_s1(useMusicPlayer, \"/dMy7t63NXD4eYACoT93CePwGrg=\");\nvar _c;\n$RefreshReg$(_c, \"MusicPlayerProvider\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./app/contexts/MusicPlayerContext.tsx\n"));

/***/ })

},
/******/ function(__webpack_require__) { // webpackRuntimeModules
/******/ var __webpack_exec__ = function(moduleId) { return __webpack_require__(__webpack_require__.s = moduleId); }
/******/ __webpack_require__.O(0, ["main-app"], function() { return __webpack_exec__("(app-pages-browser)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%2FUsers%2Fkdrama%2FDownloads%2FALL%20WEBSITES%2FBACKUPS%2FTHIRD%20ATTEMPT%20%2Fapp%2Fcontexts%2FLanguageContext.tsx&modules=%2FUsers%2Fkdrama%2FDownloads%2FALL%20WEBSITES%2FBACKUPS%2FTHIRD%20ATTEMPT%20%2Fapp%2Fcontexts%2FMusicPlayerContext.tsx&modules=%2FUsers%2Fkdrama%2FDownloads%2FALL%20WEBSITES%2FBACKUPS%2FTHIRD%20ATTEMPT%20%2Fapp%2Fglobals.css&server=false!"); });
/******/ var __webpack_exports__ = __webpack_require__.O();
/******/ _N_E = __webpack_exports__;
/******/ }
]);